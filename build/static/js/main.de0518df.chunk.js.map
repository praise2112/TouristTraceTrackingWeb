{"version":3,"sources":["styles/bg2.svg","styles/bg.svg","logo.svg","utils/setAuthToken.js","actions/authActions.js","actions/types.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/profileReducer.js","reducers/historyReducer.js","reducers/index.js","store.js","components/layout/ConstraintSlider.js","styles/NavbarStyles.js","hooks/useSliderState.js","hooks/useSelectorState.js","hooks/useToggleState.js","styles/MapContainerStyles.js","components/MapAutoComplete.js","components/layout/Navbar.js","styles/LoginStyles.js","components/auth/Login.js","components/MapMarker.js","components/MapCard.js","actions/historyActions.js","components/MapContainer.js","styles/HistoryStyles.js","components/History.js","actions/profileActions.js","components/Profile.js","components/auth/Register.js","components/common/PrivateRoute.js","components/Admin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","loginUser","userData","history","dispatch","a","async","console","log","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","message","success","push","catch","err","response","type","payload","logoutUser","removeItem","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","profile","hist","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ConstraintSlider","iconType","onChange","text","style","margin","width","textAlign","alignItems","marginRight","marginTop","min","max","verticalAlign","useStyles","makeStyles","theme","grow","flexGrow","menuButton","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","white","marginLeft","searchIcon","height","pointerEvents","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","iconn","fontSize","getContrastText","deepOrange","motionMenu","background","avatar","blue","avatar2","removeButtonBorder","outline","outlineOffset","removeLinkColor","textDecoration","border","borderWidth","borderColor","initialVal","onSelectOption","useState","setValue","Icon","useToggleState","styles","mapStyle","isSelectorOpenStyle","zIndex","showCard","mark","top","left","maxWidth","maxHeight","cardContainer","bg2","WebkitBackgroundSize","MozBackgroundSize","OBackgroundSize","backgroundSize","MapAutoComplete","props","onSelect","geoCoderService","geocode","address","location","geometry","addMarker","lat","lng","handleSearch","autoCompleteService","singaporeLatLng","searchQuery","input","radius","getQueryPredictions","dataSource","map","resp","description","setState","suggestions","this","classes","placeholder","onSearch","suffix","Component","Navbar","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","useEffect","loadCSS","document","querySelector","renderMobileMenu","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","isLoggedIn","IconButton","aria-label","className","paddingTop","to","logOutUser","edge","e","stopPropagation","paddingLeft","event","currentTarget","authLinks","Tooltip","paddingBottom","guestLinks","menuRef","useRef","useSliderState","handleChange","bool","recommendIcon","current","click","useSelectorState","selectValue","handleChangeSelector","restaurantIcon","Avatar","hotelIcon","cafeIcon","museumIcon","gymIcon","zooIcon","spaIcon","bankIcon","gasIcon","parkIcon","groceryIcon","postIcon","x","y","ref","AppBar","Toolbar","Typography","variant","noWrap","markerName","name","aria-controls","aria-haspopup","container","paper","flexDirection","form","submit","orange","root","pink","green","halfWidth_x","halfWidth_x2","Login","email","username","password","loading","bind","handleSubmit","nextProps","nextState","error","evt","target","preventDefault","Container","component","CssBaseline","onSubmit","label","fullWidth","validators","errorMessages","fullwidth","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","disabled","Grid","item","xs","Link","href","align","Date","getFullYear","connect","withStyles","withTheme","MapMarker","key","handleMarkerClick","col","card","media","expand","transform","duration","shortest","expandOpen","red","MapCard","info","expanded","setExpanded","handleExpandClick","distanceText","openNow","priceLevel","rating","timeText","photoUrl","isFlipped","flipDirection","Card","CardHeader","CardMedia","image","CardContent","character","CardActions","disableSpacing","clsx","aria-expanded","getUserHistory","url","get","clearErrors","slice","updateHistory","locationData","MapContainer","handleOption","selectorOpenValue","selectorValue","sliderValue","searchValue","isSelectorOpenValue","setTimeout","SG_COOR","zoom","updateConstraintName","prevConstraints","constraints","assign","updateConstraintTime","time","placeLocation","prevMarkers","markers","short_name","split","short_name_","newMarker","i","apiHasLoaded","mapsApi","mapsLoaded","LatLng","places","AutocompleteService","placesService","PlacesService","Geocoder","directionService","DirectionsService","toggleMap","searchResults","filteredResults","marker","timeLimit","markerLatLng","placesRequest","query","rankBy","RankBy","DISTANCE","textSearch","responseLimit","Math","placeResponse","formatted_address","price_level","opening_hours","open_now","photos","getUrl","directionRequest","origin","destination","travelMode","route","result","status","travellingRoute","routes","legs","distance","warn","currentLocation","arrival_time","leave_time","onLogoutClick","saveLocation","newHist","latitude","longitude","arrival_at","user_id","formatedTime","Moment","toDateString","toTimeString","format","navigator","geolocation","getCurrentPosition","pos","coords","addEventListener","ev","returnValue","setInterval","overflow","classNames","bootstrapURLKeys","process","libraries","center","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","replace","Fab","bg","historyStyle","marginBottom","selected","yourHistory","fontWeight","scrollbar","forceOverflow","minHeight","styleone","History","leave_at","histSelected","index","handleClick","withRouter","getCurrentProfile","Profile","firstName","lastName","birthday","city","country","nationality","phone","new_profile","updateProfile","InputLabelProps","shrink","profileData","put","Register","repeatPassword","ValidatorForm","addValidationRule","newUser","registerUser","rest","render","Admin","loggedIn","loginAdmin","users","jwtToken","currentTime","now","exp","App","exact","path","routeProps","hostname","match","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de0518df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg2.0c637bd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.4a95439e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) =>{\r\n    if(token) {\r\n        // Apply Authorization token to header to every request\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    } else{\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","// file name can be anything\r\n\r\nimport axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport {message} from 'antd';\r\n\r\n// Register User\r\nexport const registerUser = (userData, history)=> async (dispatch) =>{\r\n    // we dont have to do http://5000 cus of the proxy value we included in our package.json\r\n    // http://ec2-52-221-183-90.ap-southeast-1.compute.amazonaws.com:443/\r\n    const url = \"http://34.87.80.154:443/api/users\";\r\n    console.log(url);\r\n    await axios.post(url, userData)\r\n        .then(res => {\r\n            // history.push('/login');\r\n           dispatch(loginUser(userData, history));\r\n            message.success(\"Signed up successfully\")\r\n        })     // redirect to login\r\n        .catch(err => {\r\n            console.log('Error'+err);\r\n\r\n            dispatch({\r\n                    type: GET_ERRORS,  //this call test dispatch. to dispsatch to our reducer\r\n                    // payload: {}//sets payload to errors coming from server\r\n                    payload: err.response.data //sets payload to errors coming from server\r\n                });\r\n            }\r\n        );\r\n\r\n};\r\n\r\n// Login - Get user token\r\nexport const loginUser = (userData, history) => async (dispatch) => {\r\n    const url = \"http://34.87.80.154:443/api/users/login\";\r\n    console.log(`logging in user `);\r\n    await axios.post(url, userData)\r\n        .then(res => {\r\n            console.log(\"res is:\"+ res);\r\n            console.log( res);\r\n            //Save to localStorage\r\n            const { token } = res.data;\r\n            // Set token t  o localStorage\r\n            localStorage.setItem('jwtToken', token);\r\n            // Set token to Auth header. Apply Authorization token to header to every request\r\n            setAuthToken(token);\r\n            console.log(`Token from auth actions is:`);\r\n            console.log(token);\r\n            // the token includes user info but it is encoded\r\n            // to decode we use jwt-decode\r\n            //Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // const decoded = res.data.user;\r\n            console.log(`decoded:`);\r\n            console.log(decoded);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n            message.success(\"Login Successful\");\r\n\r\n            history.push('/')\r\n\r\n        })\r\n        .catch(err => {\r\n                console.log(`err is :${err}`);\r\n                console.log(err);\r\n                console.log(err.data);\r\n                console.log(err.response);\r\n                dispatch({\r\n                    type: GET_ERRORS,  //this call test dispatch. to dispsatch to our reducer\r\n                    payload: err.response.data //sets payload to errors coming from server\r\n                })\r\n            }\r\n        );\r\n};\r\n\r\nexport const loginAdmin = (userData, history) => async (dispatch) => {\r\n    const url = \"http://34.87.80.154:443/api/users/admin\";\r\n    console.log(`logging in admin `);\r\n    await axios.post(url, userData)\r\n        .then(res => {\r\n            console.log(\"res is:\"+ res);\r\n            console.log( res);\r\n            message.success(\"Login Successful\");\r\n\r\n            // history.push('/')\r\n\r\n        })\r\n        .catch(err => {\r\n                console.log(`err is :${err}`);\r\n                console.log(err);\r\n                console.log(err.data);\r\n                console.log(err.response);\r\n                dispatch({\r\n                    type: GET_ERRORS,  //this call test dispatch. to dispsatch to our reducer\r\n                    payload: err.response.data //sets payload to errors coming from server\r\n                })\r\n            }\r\n        );\r\n};\r\n\r\n// Set logged  in user\r\nexport const setCurrentUser = (decoded) => {\r\n  return {\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n  }\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch =>{\r\n    // Remove token from localStorage\r\n    localStorage.removeItem('jwtToken');\r\n    // Remove auth header for future requests\r\n    setAuthToken(false);\r\n    // Set current user to {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}))\r\n};\r\n","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_HISTORY = 'GET_HISTORY';\r\nexport const SET_HISTORY = 'SET_HISTORY';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n\r\nexport const PROFILE_LOADING = 'PROFILE_LOADING';\r\nexport const PROFILE_NOT_FOUND = 'PROFILE_NOT_FOUND';\r\nexport const CLEAR_CURRENT_PROFILE = 'CLEAR_CURRENT_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';","const isEmpty = (value)=>\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n    (typeof value === 'string' && value.trim().length === 0) ;\r\n\r\nexport default isEmpty;\r\n","// file name can be anything\r\nimport { SET_CURRENT_USER } from '../actions/types'\r\n\r\nimport isEmpty from '../validation/is-empty';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:  // to set current user in state\r\n            return{\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),   // if isEmpty is true we are not authenticated and vice versa\r\n                user: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        case CLEAR_ERRORS:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROFILE, PROFILE_LOADING, CLEAR_CURRENT_PROFILE} from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    // profiles: null,\r\n    // loading: false,\r\n};\r\n\r\nexport default function (state = initialState, action ) {\r\n    switch (action.type) {\r\n        case PROFILE_LOADING:\r\n            return {\r\n                ...state,\r\n                // loading: true\r\n            };\r\n        case GET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.payload,\r\n                // loading: false  // set loading to false after getting payload\r\n            };\r\n        case CLEAR_CURRENT_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_HISTORY, SET_HISTORY, CLEAR_ERRORS} from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    hist: null,\r\n    // profiles: null,\r\n    // loading: false,\r\n};\r\n\r\nexport default function (state = initialState, action ) {\r\n    switch (action.type) {\r\n        case GET_HISTORY:\r\n            return {\r\n                ...state,\r\n                hist: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\nimport profileReducer from './profileReducer';\r\nimport historyReducer from './historyReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,       // to call is from our component we use this.props.auth\r\n    errors: errorReducer,\r\n    profile: profileReducer,\r\n    hist: historyReducer\r\n});","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // This is to implement the extension\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport { Icon, Slider } from 'antd';\r\n\r\nconst ConstraintSlider = (({ iconType, value, onChange, text }) => {\r\n    return (\r\n\r\n            <div style={{ margin:0, width: \"30vw\", textAlign: \"center\", alignItems:\"center\", marginRight: \"4vw\"}}>\r\n\r\n                <Slider style={{margin:0,marginTop:\"0.5em\", width: \"30vw\"}} value={value} min={0} max={60} onChange={onChange} />\r\n\r\n                <span >\r\n                    <Icon style={{margin:0, verticalAlign:\"0.1em\"}} type={iconType} />&nbsp;&nbsp;\r\n                    {text}</span>\r\n\r\n            </div>\r\n    );\r\n});\r\n\r\nexport default ConstraintSlider;\r\n","import {fade} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {deepOrange, blue} from \"@material-ui/core/colors\";\r\nimport Navbar from \"../components/MapContainer\";\r\nimport React from \"react\";\r\n\r\nconst useStyles =makeStyles( theme=>({\r\n\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: 200,\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    iconn:{\r\n        margin: theme.spacing(1),\r\n        padding: \"0.2em\",\r\n        borderRadius: \"50%\",\r\n        fontSize: \"3em\",\r\n\r\n        // backgroundColor: theme.palette.secondary.main,\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    motionMenu:{\r\n        \"& div div:nth-child(2)\":{\r\n            // position: \"relative !important\",\r\n            display: \"flex !important\",\r\n            marginLeft: \"-15em\",\r\n            background: \"rgba(33, 150, 243, 0.2) \",\r\n            borderRadius: \"0 0 20% 20%\"\r\n        },\r\n        \"& div div:nth-child(3)\":{\r\n            // position: \"relative !important\",\r\n            display: \"flex !important\",\r\n            marginLeft: \"-15em\",\r\n            background: \"rgba(33, 150, 243, 0.2) \",\r\n            borderRadius: \"20% 20% 0 0\"\r\n        },\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        padding: \"0.2em\",\r\n        borderRadius: \"50%\",\r\n        fontSize: \"3em\",\r\n        // backgroundColor: theme.palette.secondary.main,\r\n        // color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: blue[800],\r\n    },\r\n    avatar2: {\r\n        margin: theme.spacing(1),\r\n        padding: \"0.2em\",\r\n        borderRadius: \"50%\",\r\n        fontSize: \"3em\",\r\n        // backgroundColor: theme.palette.secondary.main,\r\n        // color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: blue[900],\r\n    },\r\n    removeButtonBorder:{\r\n        \"&:focus\": {\r\n        outline: \"none !important\",\r\n        outlineOffset: \"none !important\"\r\n        }\r\n    },\r\n    removeLinkColor:{\r\n        textDecoration: \"none\",\r\n        color: \"inherit !important\" ,\r\n    },\r\n    \"span input\":{\r\n        border: \"none !important\",\r\n        borderWidth: \"0 !important\",\r\n        borderColor: \"none !important\"\r\n    },\r\n    \"@media only screen and (max-width: 768px)\": {\r\n        motionMenu:{\r\n            \"& div div:nth-child(2)\":{\r\n                // position: \"relative !important\",\r\n                display: \"flex !important\",\r\n                marginLeft: \"1.5em\",\r\n                background: \"rgba(33, 150, 243, 0.2) \",\r\n                borderRadius: \"0 0 20% 20%\"\r\n            },\r\n            \"& div div:nth-child(3)\":{\r\n                // position: \"relative !important\",\r\n                display: \"flex !important\",\r\n                marginLeft: \"1.5em\",\r\n                background: \"rgba(33, 150, 243, 0.2) \",\r\n                borderRadius: \"20% 20% 0 0\"\r\n            },\r\n        }\r\n    }\r\n}));\r\n\r\nexport default useStyles;\r\n","import {useState} from 'react';\r\n\r\nexport default (initialVal, onSelectOption) => {\r\n    const [value, setValue] = useState(initialVal);\r\n    const handleChange = (value)=>{\r\n        setValue(value);\r\n        onSelectOption(null, null, value, null)\r\n    };\r\n    const reset = ()=>{\r\n        setValue(0);\r\n    };\r\n    return [value, handleChange, reset];\r\n}\r\n\r\n","import {useState} from 'react';\r\nimport {SET_CURRENT_USER} from \"../actions/types\";\r\nimport isEmpty from \"../validation/is-empty\";\r\nimport React from \"react\";\r\nimport IconButton from \"../components/layout/Navbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport classes from \"../styles/NavbarStyles\";\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe';\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nexport default (initialVal) => {\r\n\r\n    const [value, setValue] = useState(initialVal);\r\n\r\n    const handleChange = (Icon)=>{\r\n        setValue(Icon);\r\n    };\r\n    const reset = ()=>{\r\n        setValue(0);\r\n    };\r\n    let selectValue = value;\r\n    let handleChangeSelector = handleChange;\r\n    let resetSelector = reset;\r\n    return [selectValue,  handleChangeSelector, resetSelector];\r\n}\r\n\r\n","import {useState} from 'react';\r\n\r\nfunction useToggleState(initialVal = true) {\r\n    // call useState, \"reserve piece of state\"\r\n    const [state, setState] = useState(initialVal);\r\n    console.log(`init state ${state}`);\r\n    const toggle = ()=>{\r\n        console.log(`state before toggle is : ${state}`);\r\n        setState(!state);\r\n        console.log(`toggling`);\r\n        // console.log(!state);\r\n        console.log(`state after toggle is: ${state}`);\r\n    };\r\n    // return piece of state and a function to toggle it\r\n    return [state, toggle];\r\n}\r\n\r\nexport default useToggleState;\r\n\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport {deepOrange, green, pink} from \"@material-ui/core/colors\";\r\nimport React from \"react\";\r\nimport bg2 from \"./bg2.svg\";\r\nconst styles =  theme =>  ({\r\n   mapStyle:{\r\n       height: \"89.5vh\",\r\n       width: \"100%\",\r\n       padding: \"0\"\r\n   },\r\n  isSelectorOpenStyle:{\r\n      position : \"relative\",\r\n      zIndex: -1\r\n  },\r\n    showCard:{\r\n       display: \"none\"\r\n    },\r\n    mark:{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"-100%\",\r\n        maxWidth: \"50px\",\r\n        maxHeight: \"60px\",\r\n    },\r\n    cardContainer:{\r\n        // height: \"100vh\",\r\n        // width: \"200vh\",\r\n        background: `url(${bg2}) no-repeat center center fixed`,\r\n        WebkitBackgroundSize: \"cover\",\r\n        MozBackgroundSize: \"cover\",\r\n        OBackgroundSize: \"cover\",\r\n        backgroundSize: \"cover !important\",\r\n    }\r\n\r\n});\r\n\r\nexport default styles;\r\n","import React, { Component } from 'react';\nimport { AutoComplete, Input, Button, Icon } from 'antd';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport useStyles from \"../styles/NavbarStyles\";\nimport styles from \"../styles/MapContainerStyles\";\nimport {withStyles} from \"@material-ui/core\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"./layout/Navbar\";\n\nclass MapAutoComplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestions: [],\n      dataSource: [],\n      singaporeLatLng: this.props.singaporeLatLng,\n      autoCompleteService: this.props.autoCompleteService,\n      geoCoderService: this.props.geoCoderService,\n    }\n  }\n\n  // Runs after clicking away from the input field or pressing 'enter'.\n  // Geocode the location selected to be created as a marker.\n  onSelect = ((value) => {\n    console.log(`from on select`);\n    this.state.geoCoderService.geocode({ address: value }, ((response) => {\n      const { location } = response[0].geometry;\n        console.log(response);\n        console.log(response[0]);\n        console.log(location);\n      this.props.addMarker(location.lat(), location.lng(), value);\n      // this.props.onSelectOption(null, null, null, )\n      // this.props.addMarker(location.lat(), location.lng(), this.props.markerName);\n    }))\n  });\n\n\n  // Runs a search on the current value as the user types in the AutoComplete field.\n  handleSearch = ((value) => {\n    console.log(`from handle search`);\n    const { autoCompleteService, singaporeLatLng } = this.state;\n    // Search only if there is a string\n    if (value.length > 0) {\n      const searchQuery = {\n        input: value,\n        location: singaporeLatLng, // Search in Singapore\n        radius: 30000, // With a 30km radius\n      };\n      autoCompleteService.getQueryPredictions(searchQuery, ((response) => {\n        // The name of each GoogleMaps suggestion object is in the \"description\" field\n        if (response) {\n          const dataSource = response.map((resp) => resp.description);\n          this.setState({ dataSource, suggestions: response });\n        }\n      }));\n    }\n  });\n\n  render() {\n    const { dataSource } = this.state;\n    const {classes} = this.props;\n    return (\n            <AutoComplete\n        // className=\"w-100\"\n        dataSource={dataSource}\n        // options={dataSource}\n                placeholder={this.props.placeholder}\n\n        onSelect={this.onSelect}\n        onSearch={this.handleSearch}\n        style={{width: \"20em\", border: \"none\", color: \"rgba(0, 0, 0, 0.5)\"}}\n\n        >\n\n              <Input\n                  suffix={\n\n                     <Icon type={\"search\"} />\n                 }\n              />\n\n     </AutoComplete>\n\n        // placeholder={this.props.placeholder}\n        // renderInput={params =>(\n        //   <InputBase\n        //       {...params}\n        //   placeholder=\"Search…\"\n        //   classes={{\n        //     root: classes.inputRoot,\n        //     input: classes.inputInput,\n        //   }}\n        //   inputProps={{ 'aria-label': 'search' }}\n        //   />\n        //     )}\n        // classes={{\n        //   root: classes.inputRoot,\n        //   input: classes.inputInput,\n        // }}\n        // inputProps={{ 'aria-label': 'search' }}\n\n    );\n  }\n}\n\nexport default MapAutoComplete;\n","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport LocalCafeIcon from '@material-ui/icons/LocalCafe';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport LocalGasStationIcon from '@material-ui/icons/LocalGasStation';\r\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\r\nimport LocalGroceryStoreIcon from '@material-ui/icons/LocalGroceryStore';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport MuseumIcon from '@material-ui/icons/Museum';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport SpaIcon from '@material-ui/icons/Spa'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport MotionMenu from 'react-motion-menu'\r\n\r\nimport { loadCSS } from 'fg-loadcss';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport '../../styles/hovicon.css'\r\nimport ConstraintSlider from \"./ConstraintSlider\";\r\nimport useStyles from \"../../styles/NavbarStyles\";\r\n\r\n\r\nimport useSliderState from \"../../hooks/useSliderState\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport useSelectorState from \"../../hooks/useSelectorState\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport useToggleState from \"../../hooks/useToggleState\";\r\nimport MapAutoComplete from \"../MapAutoComplete\";\r\n\r\n\r\n\r\n\r\n\r\n function Navbar(props) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n     React.useEffect(() => {\r\n         loadCSS(\r\n             'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\r\n             document.querySelector('#font-awesome-css'),\r\n         );\r\n     }, []);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = event => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    let renderMobileMenu;\r\n     if(props.isLoggedIn){\r\n         renderMobileMenu = (\r\n             <Menu\r\n                 anchorEl={mobileMoreAnchorEl}\r\n                 anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                 id={mobileMenuId}\r\n                 keepMounted\r\n                 transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                 open={isMobileMenuOpen}\r\n                 onClose={handleMobileMenuClose}\r\n             >\r\n                 <MenuItem>\r\n                     <IconButton aria-label=\"Log out\" color=\"inherit\">\r\n\r\n                         <Icon className={\"fas fa-sign-out-alt\"}  style={{ fontSize: 18, paddingTop:\"0.05em\"}}/>\r\n                     </IconButton>\r\n                     <Link to={\"#\"} onClick={props.logOutUser}>\r\n                         <p style={{marginTop: \"1.25em\"}}>Log Out</p>\r\n                     </Link>\r\n\r\n                 </MenuItem>\r\n                 <MenuItem>\r\n                     <IconButton\r\n                         edge=\"end\"\r\n                         aria-label=\"Profile\"\r\n                         color=\"inherit\"\r\n                     >\r\n                         <AccountCircle />\r\n                     </IconButton>\r\n                     <Link to={\"/profile\"} onClick={e => e.stopPropagation()}>\r\n                        <p style={{marginTop: \"1.25em\", paddingLeft:\"0.5em\"}}>Profile</p>\r\n                     </Link>\r\n                 </MenuItem>\r\n                 <MenuItem onClick={handleProfileMenuOpen}>\r\n                     <IconButton\r\n                         edge=\"end\"\r\n                         aria-label=\"History\"\r\n                         color=\"inherit\"\r\n                     >\r\n                         <HistoryIcon />\r\n                     </IconButton>\r\n                     <Link to={\"/history/1\"} onClick={e => e.stopPropagation()}>\r\n                        <p style={{marginTop: \"1.25em\", paddingLeft:\"0.5em\"}}>  History</p>\r\n                     </Link>\r\n                 </MenuItem>\r\n             </Menu>\r\n         );\r\n    }else{\r\n         renderMobileMenu = (\r\n             <Menu\r\n                 anchorEl={mobileMoreAnchorEl}\r\n                 anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                 id={mobileMenuId}\r\n                 keepMounted\r\n                 transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                 open={isMobileMenuOpen}\r\n                 onClose={handleMobileMenuClose}\r\n             >\r\n                 <MenuItem>\r\n                     <IconButton aria-label=\"login\" color=\"inherit\">\r\n\r\n                         <LockOpenIcon/>\r\n                     </IconButton>\r\n                     <Link to={\"/login\"} onClick={e => e.stopPropagation()}>\r\n                       <p style={{marginTop: \"1.25em\", paddingLeft:\"0.5em\"}}>Log In</p>\r\n                     </Link>\r\n                 </MenuItem>\r\n                 <MenuItem>\r\n                     <IconButton aria-label=\"sign up\" color=\"inherit\">\r\n\r\n                         <Icon className={\"fas fa-user-plus\"}  style={{ fontSize: 18, width: \"1.5em\", paddingTop:\"0.05em\"}}/>\r\n                     </IconButton>\r\n                     <Link to={\"/register\"} onClick={e => e.stopPropagation()}>\r\n                         <p style={{marginTop: \"1.25em\"}}>Sign Up</p>\r\n                     </Link>\r\n                 </MenuItem>\r\n\r\n             </Menu>\r\n         );\r\n     }\r\n\r\n    const authLinks = (\r\n        <div className={classes.sectionDesktop}>\r\n            <Tooltip title={\"Log Out\"}>\r\n                <IconButton aria-label=\"Log out\" color=\"inherit\">\r\n                    <Link to={\"#\"} onClick={props.logOutUser}>\r\n                        <Icon className={\"fas fa-sign-out-alt\"}  style={{ fontSize: 18, paddingTop:\"0.09em\"}}/>\r\n                    </Link>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={\"Profile\"}>\r\n\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"Profile\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <Link to={\"/profile\"} onClick={e => e.stopPropagation()}>\r\n                         <AccountCircle style={{paddingBottom: \"0.08em\"}}/>\r\n                    </Link>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={\"History\"}>\r\n\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"History\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <Link to={\"/history/1\"} onClick={e => e.stopPropagation()} >\r\n                           <HistoryIcon style={{paddingBottom: \"0.08em\"}}/>\r\n                    </Link>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </div>\r\n    );\r\n    const guestLinks =(\r\n        <div className={classes.sectionDesktop}>\r\n            <Tooltip title={\"Login\"}>\r\n                <IconButton aria-label=\"login\" color=\"inherit\">\r\n                    <Link to={\"/login\"} onClick={e => e.stopPropagation()}>\r\n                        <LockOpenIcon style={{paddingBottom: \"0.08em\"}}/>\r\n                    </Link>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={\"Sign Up\"}>\r\n                <IconButton aria-label=\"sign up\" color=\"inherit\">\r\n                    <Link to={\"/register\"} onClick={e => e.stopPropagation()}>\r\n                        <Icon className={\"fas fa-user-plus\"}  style={{ fontSize: 18, width: \"1.5em\", paddingTop:\"0.08em\"}}/>\r\n                    </Link>\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n        </div>\r\n    );\r\n    const menuRef = React.useRef(null);\r\n     const [value, handleChange, reset] = useSliderState(30, props.onSelectOption);\r\n     // const [recommendToggleValue, toggleRecommend] = useToggleState();\r\n     let bool = false;\r\n     const toggleRecommend = ()=>{\r\n       bool = !bool ;\r\n         return bool\r\n     };\r\n\r\n     const recommendIcon =  (\r\n        <Tooltip title={\"Recommendations\"} >\r\n            <IconButton aria-label=\"recommendations\" color=\"inherit\" className={classes.removeButtonBorder} >\r\n                <i className={\"hovicon effect-8 mini\"  }  onClick={()=>{props.onSelectOption(toggleRecommend(), null, null, null); menuRef.current.click()} } >\r\n                    <Icon className={\"far fa-lightbulb \" }  style={{ fontSize: \"1em\", width: \"1.5em\", paddingTop:\"0.05em\"}} />\r\n                </i>\r\n\r\n            </IconButton>\r\n     </Tooltip>\r\n    );\r\n     const [selectValue, handleChangeSelector, resetSelector] = useSelectorState(recommendIcon);\r\n\r\n     const restaurantIcon =  (\r\n        <Tooltip title={\"Restaurants\"} >\r\n            <IconButton aria-label=\"Restaurants\" color=\"inherit\" style={{padding: 0, paddingBottom:\"2.6em\"}} className={classes.removeButtonBorder + \" hovicon effect-8 mini\"}>\r\n                <Avatar className={classes.avatar2 } ><RestaurantIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(true,null, null, null)}} /></Avatar>\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n    const hotelIcon =  (\r\n        <Tooltip title={\"Hotels\" } >\r\n            <IconButton aria-label=\"Hotels\" color=\"inherit\" style={{padding: 0, paddingBottom:\"2.6em\"}} className={classes.removeButtonBorder  + \" hovicon effect-8 mini\"}>\r\n                <Avatar className={classes.avatar2}><HotelIcon  onClick={()=>{menuRef.current.click(); props.onSelectOption(true,null, null, null)}} /></Avatar>\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n    const cafeIcon =  (\r\n        <Tooltip title={\"Cafe\"} >\r\n            <IconButton aria-label=\"Cafe\" color=\"inherit\" style={{padding: 0, paddingBottom:\"2.6em\"}}  className={classes.removeButtonBorder  + \" hovicon effect-8 mini\"}>\r\n                <Avatar className={classes.avatar2}><LocalCafeIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(true,null, null, null)}}/></Avatar>\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n    const museumIcon =  (\r\n        <Tooltip title={\"Museum\"} >\r\n            <IconButton aria-label=\"Museum\" color=\"inherit\" style={{padding: 0, paddingBottom:\"2.6em\"}} className={classes.removeButtonBorder  + \" hovicon effect-8 mini\"}>\r\n                <Avatar className={classes.avatar2}><MuseumIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(true,null, null, null)}}/></Avatar>\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n    const gymIcon =  (\r\n        <Tooltip title={\"Gym\"} >\r\n            <IconButton aria-label=\"Gym\" color=\"inherit\" style={{padding: 0, paddingBottom:\"2.6em\"}} className={classes.removeButtonBorder+ \" hovicon effect-8 mini\"}>\r\n                <Avatar  className={classes.avatar2}><Icon className={\"fas fa-dumbbell \"}  style={{color: \"white\" }}  onClick={()=>{menuRef.current.click(); props.onSelectOption(true,null, null, null)}}/></Avatar>\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n    const zooIcon =  (\r\n        <Tooltip title={\"Zoo\"} >\r\n            <IconButton aria-label=\"Zoo\" color=\"inherit\" style={{padding: 0, paddingBottom:\"2.6em\"}} className={classes.removeButtonBorder+ \" hovicon effect-8 mini\"}>\r\n                <Avatar className={classes.avatar2}><Icon className={\"fas fa-paw\"}  style={{color: \"white\"}} onClick={()=>{menuRef.current.click(); props.onSelectOption(true,null, null, null)}}/></Avatar>\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n    const spaIcon =  (\r\n        <Tooltip title={\"Spa\"} >\r\n            <IconButton aria-label=\"Spa\" color=\"inherit\" style={{padding: 0, paddingBottom:\"2.6em\"}} className={classes.removeButtonBorder+ \" hovicon effect-8 mini\"}>\r\n                <Avatar className={classes.avatar2}><SpaIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(true,null, null, null)}}/></Avatar>\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n    const bankIcon =  (\r\n        <Tooltip title={\"Banks\"} >\r\n            <IconButton aria-label=\"Banks\" color=\"inherit\" style={{padding: 0, paddingBottom:\"2.6em\"}} className={classes.removeButtonBorder+ \" hovicon effect-8 mini\"}>\r\n                <Avatar className={classes.avatar2}><AccountBalanceIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(true,null, null, null)}} /></Avatar>\r\n            </IconButton>\r\n        </Tooltip>\r\n    ); const gasIcon =  (\r\n         <Tooltip title={\"Gas Stations\"} >\r\n             <IconButton aria-label=\"Gas Stations\" color=\"inherit\" style={{padding: 0, paddingBottom:\"2.6em\"}} className={classes.removeButtonBorder+ \" hovicon effect-8 mini\"}>\r\n                 <Avatar className={classes.avatar2}><LocalGasStationIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(true, null, null, null)}} /></Avatar>\r\n             </IconButton>\r\n         </Tooltip>\r\n    ); const parkIcon =  (\r\n         <Tooltip title={\" Parking Lots\"} >\r\n             <IconButton aria-label=\"Parking Lots\" color=\"inherit\" style={{padding: 0}} className={classes.removeButtonBorder+ \" hovicon effect-8 mini\"}>\r\n                 <Avatar className={classes.avatar2}><LocalParkingIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(true,null, null, null)}}/></Avatar>\r\n             </IconButton>\r\n         </Tooltip>\r\n    );\r\n    const groceryIcon =  (\r\n    <Tooltip title={\" Groceries\"} >\r\n        <IconButton aria-label=\" Groceries\" color=\"inherit\" style={{padding: 0, paddingBottom:\"2.6em\"}} className={classes.removeButtonBorder+ \" hovicon effect-8 mini\"}>\r\n            <Avatar className={classes.avatar2}><LocalGroceryStoreIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(true,null, null, null)}}/></Avatar>\r\n        </IconButton>\r\n    </Tooltip>\r\n    );\r\n    const postIcon =  (\r\n    <Tooltip title={\" Post Offices\"} >\r\n        <IconButton aria-label=\"recommendations\" color=\"inherit\" style={{padding: 0, paddingBottom:\"2.6em\"}} className={classes.removeButtonBorder+ \" hovicon effect-8 mini\"}>\r\n            <Avatar className={classes.avatar2}><LocalHospitalIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(true,null, null, null)}}/></Avatar>\r\n        </IconButton>\r\n    </Tooltip>\r\n    );\r\n\r\n\r\n\r\n\r\n     const motionMenu = (\r\n        <MotionMenu\r\n            x={-25}\r\n            y={-15}\r\n            type=\"vertical\"\r\n            margin={80}\r\n            className={classes.motionMenu}\r\n\r\n\r\n        >\r\n            {/*invisible toggler*/}\r\n            <div style={{display: \"none\"}}>\r\n                <Icon ref={menuRef}  className={\"fa fa-bars\"} style={{color: \"black\"}} />\r\n            </div>\r\n\r\n            {/*items*/}\r\n            <div >\r\n                <Tooltip title={\"Restaurants\"} >\r\n                    <IconButton aria-label=\"Restaurants\" color=\"inherit\" onClick={(e)=>handleChangeSelector(restaurantIcon)} className={classes.removeButtonBorder}>\r\n                <Avatar className={classes.avatar}><RestaurantIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(false,\"restaurant\", null, null)}} /></Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={\"Hotels\" } >\r\n                    <IconButton aria-label=\"Hotels\" color=\"inherit\" onClick={(e)=>handleChangeSelector(hotelIcon)} className={classes.removeButtonBorder}>\r\n                <Avatar className={classes.avatar}><HotelIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(false, \"lodging\",null, null)}}/></Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={\"Cafe\"} >\r\n                    <IconButton aria-label=\"Cafe\" color=\"inherit\" onClick={(e)=>handleChangeSelector(cafeIcon)} className={classes.removeButtonBorder}>\r\n                <Avatar className={classes.avatar}><LocalCafeIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(false,\"cafe\", null, null)}}/></Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={\"Museum\"} >\r\n                    <IconButton aria-label=\"Museum\" color=\"inherit\" onClick={(e)=>handleChangeSelector(museumIcon)} className={classes.removeButtonBorder}>\r\n                <Avatar className={classes.avatar}><MuseumIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(false,\"museum\", null, null)}}/></Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={\"Zoo\"} >\r\n                    <IconButton aria-label=\"Zoo\" color=\"inherit\" onClick={(e)=>handleChangeSelector(zooIcon)} className={classes.removeButtonBorder}>\r\n                <Avatar className={classes.avatar}><Icon className={\"fas fa-paw\"}  style={{color: \"white\"}} onClick={()=>{menuRef.current.click(); props.onSelectOption(false,\"zoo\", null, null)}}/></Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={\"Spa\"} >\r\n                    <IconButton aria-label=\"Spa\" color=\"inherit\" onClick={(e)=>handleChangeSelector(spaIcon)} className={classes.removeButtonBorder}>\r\n                <Avatar className={classes.avatar}><SpaIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(false,\"spa\", null, null)}}/></Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n\r\n            </div>\r\n            {/*Item row2*/}\r\n            <div>\r\n                <Tooltip title={\"Gym\"} >\r\n                    <IconButton aria-label=\"Gym\" color=\"inherit\" onClick={(e)=>handleChangeSelector(gymIcon)} className={classes.removeButtonBorder}>\r\n                        <Avatar  className={classes.avatar}><Icon className={\"fas fa-dumbbell \"}  style={{color: \"white\" }}  onClick={()=>{menuRef.current.click(); props.onSelectOption(false, \"gym\", null, null)}}/></Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={\"Banks\"} >\r\n                    <IconButton aria-label=\"Banks\" color=\"inherit\" onClick={(e)=>handleChangeSelector(bankIcon)} className={classes.removeButtonBorder}>\r\n                <Avatar className={classes.avatar}><AccountBalanceIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(false, \"bank\",null, null)}} /></Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={\"Gas Stations\"} >\r\n                    <IconButton aria-label=\"Gas Stations\" color=\"inherit\" onClick={(e)=>handleChangeSelector(gasIcon)} className={classes.removeButtonBorder}>\r\n                <Avatar className={classes.avatar}><LocalGasStationIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(false,\"gas_station\", null, null)}} /></Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={\" Parking Lots\"} >\r\n                    <IconButton aria-label=\"Parking Lots\" color=\"inherit\" onClick={(e)=>handleChangeSelector(parkIcon)} className={classes.removeButtonBorder}>\r\n                <Avatar className={classes.avatar}><LocalParkingIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(false,\"parking\", null, null)}}/></Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={\" Groceries\"} >\r\n                    <IconButton aria-label=\" Groceries\" color=\"inherit\" onClick={(e)=>handleChangeSelector(groceryIcon)} className={classes.removeButtonBorder}>\r\n                <Avatar className={classes.avatar}><LocalGroceryStoreIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(false,\"grocery_or_supermarket\", null, null)}}/></Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title={\" Post Offices\"} >\r\n                    <IconButton aria-label=\"Post Offices\" color=\"inherit\" onClick={(e)=>handleChangeSelector(postIcon)} className={classes.removeButtonBorder}>\r\n                <Avatar className={classes.avatar}><LocalHospitalIcon onClick={()=>{menuRef.current.click(); props.onSelectOption(false, \"post_office\",null, null)}}/></Avatar>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </MotionMenu>\r\n    );\r\n\r\n     return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        TouristTraceTrack\r\n                    </Typography>\r\n\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n\r\n                    <ConstraintSlider\r\n                        iconType=\"clock-circle\"\r\n                        value={value}\r\n                        onChange={(value) => handleChange(value)}\r\n                        text=\"Minutes to destination\"\r\n                    />\r\n                    </div>\r\n                    {motionMenu}\r\n                    {selectValue}\r\n\r\n\r\n                    <div className={classes.search}>\r\n                        {/*<div className={classes.searchIcon}>*/}\r\n\r\n                            {/*<SearchIcon />*/}\r\n                        {/*</div>*/}\r\n                        <MapAutoComplete\r\n                            autoCompleteService={props.autoCompleteService}\r\n                            geoCoderService={props.geoCoderService}\r\n                            singaporeLatLng={props.singaporeLatLng}\r\n                            markerName={props.name}\r\n                            addMarker={props.addMarker}\r\n                            placeholder=\"Search…\"\r\n                            onSelectOption={props.onSelectOption}\r\n\r\n                        />\r\n                        {/*<InputBase*/}\r\n                            {/*placeholder=\"Search…\"*/}\r\n                            {/*classes={{*/}\r\n                                {/*root: classes.inputRoot,*/}\r\n                                {/*input: classes.inputInput,*/}\r\n                            {/*}}*/}\r\n                            {/*inputProps={{ 'aria-label': 'search' }}*/}\r\n                        {/*/>*/}\r\n                    </div>\r\n                    {props.isLoggedIn ? authLinks : guestLinks}\r\n\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport {deepOrange, green, pink} from \"@material-ui/core/colors\";\r\nimport React from \"react\";\r\nimport bg2 from \"./bg2.svg\";\r\nconst styles =  theme =>  ({\r\n    container:{\r\n        height: \"100vh\",\r\n        background: `url(${bg2}) no-repeat center center fixed`,\r\n        WebkitBackgroundSize: \"cover\",\r\n        MozBackgroundSize: \"cover\",\r\n        OBackgroundSize: \"cover\",\r\n        backgroundSize: \"cover !important\",\r\n    },\r\n    paper: {\r\n        paddingTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        // backgroundColor: theme.palette.secondary.main,\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    orange: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    pink: {\r\n        color: theme.palette.getContrastText(pink[500]),\r\n        backgroundColor: pink[500],\r\n    },\r\n    green: {\r\n        color: '#fff',\r\n        backgroundColor: green[500],\r\n    },\r\n    halfWidth_x:{\r\n        width: '45%', // Fix IE 11 issue.\r\n        // marginRight: '5%'\r\n    },\r\n    halfWidth_x2:{\r\n        width: '45%', // Fix IE 11 issue.\r\n        marginLeft: '10%'\r\n    }\r\n});\r\n\r\nexport default styles;\r\n","import React, {Component} from 'react';\r\nimport * as PropTypes from \"prop-types\";     // to map prop to prop-types\r\n\r\nimport { connect } from 'react-redux' // to use redux in a component\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport styles from '../../styles/LoginStyles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport {message } from 'antd';\r\nimport isEmpty from \"../../validation/is-empty\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            username:\"\",\r\n            password: \"\",\r\n            loading: false,\r\n            errors: {}\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    componentDidMount() {  // if user is already logged in redirect\r\n        if(this.props.auth.isAuthenticated){\r\n            this.props.history.push('/');\r\n            message.success(\"User already logged in. Redirecting...\")\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {      // take the new errors from nextProps if any and set that to errors in the state\r\n        if(nextProps.auth.isAuthenticated){\r\n\r\n            this.props.history.push('/');\r\n        }\r\n        if(nextProps.errors && !nextProps.auth.isAuthenticated){\r\n            this.setState({errors: nextProps.errors}, ()=>{\r\n                this.setState({loading:false});\r\n                if(this.state.errors.message !== undefined)\r\n                    message.error(this.state.errors.message);\r\n            });\r\n\r\n        }\r\n    }\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n        const userData = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n        console.log(`${this.state.username}${this.state.password}`);\r\n        this.setState({loading: true});\r\n        this.props.loginUser(userData, this.props.history);\r\n        // message.success(\"Succesfully logged in user\");\r\n\r\n        console.log(`Handle submit`);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const {email, username, password, loading} = this.state;\r\n\r\n        return (\r\n            <section className={classes.container}>\r\n\r\n\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                       Login\r\n                    </Typography>\r\n                    <ValidatorForm onSubmit={this.handleSubmit} ref={'form'} className={classes.form} >\r\n                            {/*<TextValidator*/}\r\n                                {/*className={classes.form}*/}\r\n                                {/*value={email}*/}\r\n                                {/*placeholder={\"Email Address\"}*/}\r\n                                {/*name={\"email\"}*/}\r\n                                {/*variant={\"outlined\"}*/}\r\n                                {/*margin={\"normal\"}*/}\r\n                                {/*onChange={this.handleChange}*/}\r\n                                {/*id=\"email\"*/}\r\n                                {/*label={\"Email*\"}*/}\r\n                                {/*autoComplete=\"email\"*/}\r\n                                {/*autoFocus*/}\r\n                                {/*//the order of validators and error messages matter*/}\r\n                                {/*validators={[\"required\",\"isEmail\"]}*/}\r\n                                {/*errorMessages={[*/}\r\n                                    {/*\"Enter an email\",*/}\r\n                                    {/*\"Must be an Email\"]}*/}\r\n                            {/*/>*/}\r\n                        <TextValidator\r\n                            label={\"Username*\"}\r\n                            value={username}\r\n                            name={\"username\"}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            placeholder={\"Password\"}\r\n                            variant={\"outlined\"}\r\n                            type={'text'}\r\n                            margin={\"normal\"}\r\n                            validators={[\"required\"]}\r\n                            errorMessages={[\"Enter a username\"]}\r\n                        />\r\n                            <TextValidator\r\n                                className={classes.form}\r\n                                value={password}\r\n                                placeholder={\"Password\"}\r\n                                name={\"password\"}\r\n                                variant={\"outlined\"}\r\n                                margin={\"normal\"}\r\n                                onChange={this.handleChange}\r\n                                type={'password'}\r\n                                fullwidth\r\n                                id=\"password\"\r\n                                label={\"Password*\"}\r\n                                autoComplete=\"password\"\r\n                                autoFocus\r\n                                validators={[\"required\"]}\r\n                                errorMessages={[\r\n                                    \"Please enter a password\"]}\r\n                            />\r\n\r\n\r\n                            <br/>\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={loading}\r\n                        >\r\n                            LogIn\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link href=\"/register\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        </ValidatorForm>\r\n                </div>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    {'Copyright © '}\r\n                    <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                        Tourist Trace Tracking\r\n                    </Link>{' '}\r\n                    {new Date().getFullYear()}\r\n                    {'.'}\r\n                </Typography>\r\n            </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes ={\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\n// if we want to get the auth state to our component we use\r\nconst mapStateToProps = (state) =>({\r\n    auth: state.auth,  //the name auth in state.auth comes from our root reducer(index)\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(withStyles(styles, {withTheme: true})(Login));\r\n","import React from 'react';\n// import { Icon } from 'antd';\nimport RoomIcon from '@material-ui/icons/Room';\n\nconst MapMarker = (({ name, key, lat, lng, handleMarkerClick, col }) => {\n  return (\n    <div key={key} style={{width: \"10em\", zIndex: \"9000\"}} onClick={()=>handleMarkerClick(lat, lng)}>\n      <span className=\"brand-red\"><b>{name}</b></span><br/>\n      {/*<Icon className=\"font-1-5\" type=\"environment\" theme=\"twoTone\" twoToneColor=\"#fd0000\" />*/}\n      <RoomIcon style={{color: `${col}`, fontSize: \"2.5em\"}}/>\n    </div>\n  );\n});\n\nexport default MapMarker;\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Rate } from 'antd';\r\n\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ReactCardFlip from 'react-card-flip';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        maxWidth: 345,\r\n        width: \"24em\",\r\n        margin: \"0 1em 1em 1em\"\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nconst MapCard = (({info, key}) =>{\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    const { address, distanceText, name, openNow, priceLevel, rating, timeText } = info;\r\n    let { photoUrl} = info;\r\n    if(photoUrl === \"\"){\r\n        photoUrl = \"https://carolinadojo.com/wp-content/uploads/2017/04/default-image.jpg\"\r\n    }\r\n    console.log(photoUrl);\r\n    console.log(key + \"ll\");\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n        <ReactCardFlip isFlipped={expanded} flipDirection=\"vertical\">\r\n            <Card className={classes.card} key={key}>\r\n                <CardHeader\r\n                    // avatar={\r\n                    //     <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                    //         R\r\n                    //     </Avatar>\r\n                    // }\r\n                    // action={\r\n                    //     <IconButton aria-label=\"settings\">\r\n                    //         <MoreVertIcon />\r\n                    //     </IconButton>\r\n                    // }\r\n                    title={name}\r\n                    // subheader=\"September 14, 2016\"\r\n                />\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={photoUrl}\r\n                    title={name}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        <span className=\"d-block text-center\">Distance: {distanceText} - {timeText} away</span>\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={'text-center'}>\r\n                        <Rate value={rating} /> <br/>\r\n                        <Rate value={priceLevel} character=\"$\" />\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    <IconButton aria-label=\"add to favorites\">\r\n                        <FavoriteIcon />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"share\">\r\n                        <ShareIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.card} key={key}>\r\n                <CardHeader\r\n                    // avatar={\r\n                    //     <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                    //         R\r\n                    //     </Avatar>\r\n                    // }\r\n                    // action={\r\n                    //     <IconButton aria-label=\"settings\">\r\n                    //         <MoreVertIcon />\r\n                    //     </IconButton>\r\n                    // }\r\n                    title={name}\r\n                    // subheader=\"September 14, 2016\"\r\n                />\r\n                {/*<CardMedia*/}\r\n                    {/*className={classes.media}*/}\r\n                    {/*image={photoUrl}*/}\r\n                    {/*title={name}*/}\r\n                {/*/>*/}\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        <p className={'text-center'}>Address</p>\r\n                        <hr/>\r\n                        {address}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={'text-center'}>\r\n                        {openNow ? (<span><b>Open now</b> </span>): (<span><b>Closed now</b></span>) }\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    <IconButton aria-label=\"add to favorites\">\r\n                        <FavoriteIcon />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"share\">\r\n                        <ShareIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n\r\n    </ReactCardFlip>\r\n\r\n    );\r\n});\r\n\r\nexport default MapCard;\r\n","import axios from 'axios';\r\n\r\nimport {GET_HISTORY, PROFILE_LOADING, GET_ERRORS, CLEAR_CURRENT_PROFILE, CLEAR_ERRORS} from \"./types\";\r\nimport {message} from 'antd';\r\n\r\n// Get current profile\r\nexport const getUserHistory = (id) =>async dispatch => {\r\n    // dispatch(setProfileLoading());  // set loading to true\r\n    const url = `http://34.87.80.154:443/api/users/${id}/history`;\r\n    console.log(`id is ${id}`);\r\n    console.log(url);\r\n    console.log(`Token from profile actions is:`);\r\n    console.log();\r\n    axios.defaults.headers.common['Authorization'] = \"Bearer \"+axios.defaults.headers.common['Authorization'];\r\n    await axios.get(url)\r\n        .then(res =>{\r\n            console.log(`res is:`);\r\n            console.log(res);\r\n            dispatch({\r\n                type: GET_HISTORY,\r\n                payload: res.data.data\r\n            });\r\n            dispatch(clearErrors());\r\n\r\n            message.success(\"Got users history\")\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_HISTORY,\r\n                payload: []\r\n            });\r\n            // dispatch({\r\n            //     type: GET_ERRORS,  //this call test dispatch. to dispsatch to our reducer\r\n            //     // payload: {}//sets payload to errors coming from server\r\n            //     payload: err.response.data //sets payload to errors coming from server\r\n            // });\r\n        });\r\n    axios.defaults.headers.common['Authorization'] =  axios.defaults.headers.common['Authorization'].slice(7);\r\n};\r\n// update profile\r\nexport const updateHistory = (locationData, id, history) => async dispatch => {\r\n    // dispatch(setProfileLoading());  // set loading to true\r\n    // const product_id_list = ['pid1234', 'pid1235']\r\n\r\n    // const bodyFormData = new FormData();\r\n    //\r\n    // locationData.forEach((item) => {\r\n    //     bodyFormData.append('locationData[]', item);\r\n    // });\r\n    // console.log(bodyFormData);\r\n\r\n    const url = \"http://34.87.80.154:443\";\r\n    axios.defaults.headers.common['Authorization'] = \"Bearer \"+axios.defaults.headers.common['Authorization'];\r\n\r\n    await axios.post(`${url}/api/users/${id}/history`, locationData)\r\n        .then(res => {\r\n            console.log(`update res is:`);\r\n            console.log(res);\r\n            getUserHistory(id);\r\n            history.push('/');\r\n            dispatch(clearErrors());\r\n\r\n            message.success(\"History Updated Successfully\")\r\n        })\r\n        .catch(err => {\r\n            console.log(`Update err is:`);\r\n            console.log(err);\r\n            dispatch({\r\n                type: GET_HISTORY,\r\n                payload: []\r\n            });\r\n        });\r\n    axios.defaults.headers.common['Authorization'] =  axios.defaults.headers.common['Authorization'].slice(7);\r\n\r\n};\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux'\r\nimport { logoutUser } from \"../actions/authActions\";\r\nimport Navbar from './layout/Navbar';\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport styles from '../styles/MapContainerStyles';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Moment from 'moment';\r\n\r\n// import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\r\n\r\nimport { Button, Input, Divider, message } from 'antd';\r\nimport SwapHorizontalCircleOutlinedIcon from '@material-ui/icons/SwapHorizontalCircleOutlined';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport classNames from \"classnames\";\r\n\r\n\r\n\r\n\r\n// import '../styles/css/component.css'\r\n// import '../styles/css/default.css';\r\nimport '../styles/hovicon.css';\r\nimport {loadCSS} from \"fg-loadcss\";\r\n\r\nimport {deepOrange, green, pink} from \"@material-ui/core/colors\";\r\n\r\nimport Avatar from \"./auth/Login\";\r\nimport {withStyles} from \"@material-ui/core\";\r\n// import Divider from \"@material-ui/core/Divider\";\r\nimport MapMarker from \"./MapMarker\";\r\nimport MapCard from \"./MapCard\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport {updateHistory} from \"../actions/historyActions\";\r\n// import '../styles/js/component.js';\r\n// import '../styles/js/modernizr.custom.js';\r\n// const SG_COOR = { lat: 21.0278, lng: 105.8342 };\r\n\r\n\r\nconst AnyReactComponent = ({ text }) => <div style={{\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"-100%\",\r\n    maxWidth: \"50px\",\r\n    maxHeight: \"60px\",\r\n    // overflow: \"hidden\",\r\n    width: \"18px\",\r\n    height: \"18px\",\r\n    transform: \"translate(100%, 50%)\",\r\n    border: \"2px solid #fff\"}}>{text}</div>;\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            constraints: [{ name: '', time: 0 }],\r\n            searchResults: [],\r\n            mapsLoaded: false,\r\n            markers: [],\r\n            map: {},\r\n            mapsApi: {},\r\n            singaporeLatLng: {},\r\n            autoCompleteService: {},\r\n            placesService: {},\r\n            geoCoderService: {},\r\n            directionService: {},\r\n            isSelectorOpenValue: false,\r\n            showCard: false,\r\n            selectorValue: \"cafe\",\r\n            sliderValue: 30,\r\n            searchValue: null,\r\n            SG_COOR:{ lat: 21.0278, lng: 105.8342 },\r\n            zoom: 18,\r\n            currentLocation: {},\r\n            placeLocation: {},\r\n            arrival_time: \"\",\r\n            leave_time: \"\"\r\n        };\r\n        this.onLogoutClick = this.onLogoutClick.bind(this);\r\n        this.handleOption = this.handleOption.bind(this);\r\n        this.handleMarkerClick = this.handleMarkerClick.bind(this);\r\n        this.toggleMap = this.toggleMap.bind(this);\r\n        this.saveLocation = this.saveLocation.bind(this);\r\n\r\n    }\r\n    onLogoutClick(e){\r\n        e.preventDefault();\r\n        // this.props.clearCurrentProfile();\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    saveLocation(){\r\n        if(this.props.auth.isAuthenticated) {\r\n            let newHist = [\r\n                {\r\n                    latitude: this.state.currentLocation.lat,\r\n                    longitude: this.state.currentLocation.lng,\r\n                    arrival_at: this.state.arrival_time,\r\n                    // leave_time: this.state.leave_time\r\n                }\r\n            ];\r\n            const user_id = this.props.auth.user.result.id;\r\n            console.log(`auth is`);\r\n            console.log(this.props.auth.user);\r\n\r\n            this.props.updateHistory(newHist, user_id, this.props.history);\r\n            let time = new Date();\r\n            let formatedTime = Moment(time.toDateString() +\" \"+ time.toTimeString()).format('YYYY-MM-DD HH:mm:ss');\r\n            this.setState({arrival_time: formatedTime})\r\n        }\r\n    }\r\n    componentDidMount() {   // if user is already logged in redirect\r\n        // if(this.props.auth.isAuthenticated){\r\n        //     this.props.history.push('/')\r\n        // }\r\n        console.log(navigator);\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) =>{\r\n                console.log(\"pos is:\");\r\n                console.log(position);\r\n                let pos = {\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude\r\n                };\r\n                let time = new Date();\r\n                let formatedTime = Moment(time.toDateString() +\" \"+ time.toTimeString()).format('YYYY-MM-DD HH:mm:ss');\r\n                this.setState({currentLocation: pos, placeLocation: pos, arrival_time: formatedTime });\r\n                // add marker\r\n                const prevMarkers = this.state.markers;\r\n                const markers = Object.assign([], prevMarkers);\r\n                markers.push({lat: pos.lat, lng: pos.lng, name:\"\"});\r\n                this.setState({ markers });\r\n                setTimeout(this.handleSearch, 1000);\r\n\r\n\r\n                console.log(this.state.arrival_time);\r\n                console.log();\r\n            })\r\n        }\r\n        // check is user has left current location\r\n        let userLeft= ()=>{\r\n            // runs every 60 sec and runs on init.\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition((position) =>{\r\n                    let pos = {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude\r\n                    };\r\n                    // if position is not equal to the currentLocation\r\n                    if(pos.lat !== this.state.currentLocation.lat || pos.lng !== this.state.currentLocation.lng){\r\n                        console.log(`Location changed`);\r\n                        console.log(pos);\r\n                        let time = new Date();\r\n                        let formatedTime = Moment(time.toDateString() +\" \"+ time.toTimeString()).format('YYYY-MM-DD HH:mm:ss');\r\n                        this.setState({leave_time: formatedTime, currentLocation: pos }, ()=>{\r\n                            this.saveLocation()\r\n                        });\r\n\r\n                    }else {\r\n                        console.log(`Same location`);\r\n                        console.log(pos);\r\n                    }\r\n                })\r\n            }\r\n        };\r\n\r\n        // set Leave time onWindowClose\r\n        window.addEventListener(\"beforeunload\", (ev) =>\r\n        {\r\n            ev.preventDefault();\r\n\r\n            // let pos;\r\n            // if (navigator.geolocation) {\r\n            //     navigator.geolocation.getCurrentPosition((position) => {\r\n            //          pos = {\r\n            //             lat: position.coords.latitude,\r\n            //             lng: position.coords.longitude\r\n            //         };\r\n            //     })\r\n            // }\r\n            let time = new Date();\r\n            let formatedTime = Moment(time.toDateString() +\" \"+ time.toTimeString()).format('YYYY-MM-DD HH:mm:ss');\r\n            this.setState({leave_time: formatedTime}, ()=>{\r\n                this.saveLocation()\r\n            });\r\n            return ev.returnValue = 'Are you sure you want to close?';\r\n        });\r\n        // run every 5 seconds\r\n        setInterval(userLeft, 30*1000);\r\n    }\r\n\r\n\r\n    // get options from navbar\r\n    handleOption = (selectorOpenValue, selectorValue, sliderValue, searchValue) => {\r\n        if(selectorOpenValue!= null) this.setState({isSelectorOpenValue: selectorOpenValue});\r\n        if(selectorValue!= null) this.setState({selectorValue: selectorValue});\r\n        if(sliderValue!= null) this.setState({sliderValue:sliderValue});\r\n        if(searchValue!= null) this.setState({searchValue: searchValue});\r\n        console.log(selectorOpenValue + \"selectorOpenvalue\");\r\n        console.log(selectorValue +\"selector value\");\r\n        console.log(sliderValue +\"slidervalue\");\r\n        console.log(searchValue + \"searchvalue\");\r\n        setTimeout(this.handleSearch, 1000);\r\n\r\n\r\n    };\r\n\r\n    handleMarkerClick = (lat, lng)=>{\r\n        console.log(`Marker clicked`);\r\n        console.log(lat +\"\"+ lng);\r\n        this.setState({\r\n            SG_COOR:{ lat: lat, lng:lng},\r\n            zoom: 30\r\n        })\r\n    };\r\n    // Update name for constraint with index === key\r\n    updateConstraintName = ((event, key) => {\r\n        event.preventDefault();\r\n        const prevConstraints = this.state.constraints;\r\n        const constraints = Object.assign([], prevConstraints);\r\n        constraints[key].name = event.target.value;\r\n        this.setState({ constraints });\r\n    });\r\n\r\n    // Updates distance (in KM) for constraint with index == key\r\n    updateConstraintTime = ((key, value) => {\r\n        const prevConstraints = this.state.constraints;\r\n        const constraints = Object.assign([], prevConstraints);\r\n        constraints[key].time = value;\r\n        this.setState({ constraints });\r\n    });\r\n\r\n    // Adds a Marker to the GoogleMaps component\r\n    addMarker = ((lat, lng, name) => {\r\n        // change current map lat lng\r\n        this.setState({placeLocation: {lat: lat, lng: lng}});\r\n\r\n        const prevMarkers = this.state.markers;\r\n        const markers = Object.assign([], prevMarkers);\r\n\r\n        // If name already exists in marker list just replace lat & lng.\r\n        let short_name = name.split(',', 2) ;\r\n        let short_name_ = name.split(',', 2) + \" \"+ name.split(',')[name.split(',').length -1] ;\r\n        console.log(short_name + \"shortname\");\r\n        console.log(short_name_ + \"shortname2\");\r\n        let newMarker = true;\r\n        for (let i = 0; i < markers.length; i++) {\r\n            if (markers[i].name === name) {\r\n                newMarker = false;\r\n                markers[i].lat = lat;\r\n                markers[i].lng = lng;\r\n\r\n                message.success(`Updated \"${short_name_}\" Marker`);\r\n                break;\r\n            }\r\n        }\r\n        // Name does not exist in marker list. Create new marker\r\n        if (newMarker) {\r\n            markers.push({ lat, lng, name: short_name_ });\r\n            message.success(`Added new \"${short_name_}\" Marker`);\r\n        }\r\n\r\n        this.setState({ markers });\r\n        this.handleSearch();\r\n    });\r\n\r\n    // Runs once when the Google Maps library is ready\r\n    // Initializes all services that we need\r\n    apiHasLoaded = ((map, mapsApi) => {\r\n\r\n        console.log(`map`);\r\n        console.log(map);\r\n        console.log(mapsApi);\r\n        this.setState({\r\n            mapsLoaded: true,\r\n            map,\r\n            mapsApi,\r\n            singaporeLatLng: new mapsApi.LatLng(this.state.SG_COOR.lat, this.state.SG_COOR.lng),\r\n            autoCompleteService: new mapsApi.places.AutocompleteService(),\r\n            placesService: new mapsApi.places.PlacesService(map),\r\n            geoCoderService: new mapsApi.Geocoder(),\r\n            directionService: new mapsApi.DirectionsService(),\r\n        });\r\n    });\r\n\r\n    toggleMap = (()=>{\r\n        if(this.state.searchResults.length>0)\r\n            this.setState({showCard: !this.state.showCard})\r\n    });\r\n\r\n    // With the constraints, find some places\r\n    handleSearch = (() => {\r\n        const { markers, constraints, sliderValue, placesService, directionService, mapsApi } = this.state;\r\n        if (markers.length === 0) {\r\n            message.warn('Add a constraint and try again!');\r\n            return;\r\n        }\r\n        const filteredResults = [];\r\n        const marker = markers[markers.length-1];\r\n        // const timeLimit = constraints[0].time;\r\n        const timeLimit = sliderValue;\r\n        const markerLatLng = new mapsApi.LatLng(marker.lat, marker.lng);\r\n\r\n        const placesRequest = { //https://developers.google.com/places/web-service/search#TextSearchRequests\r\n            location: markerLatLng,\r\n            type: [this.state.selectorValue], // List of types: https://developers.google.com/places/supported_types\r\n            query: this.state.selectorValue,\r\n            rankBy: mapsApi.places.RankBy.DISTANCE, // Cannot be used with radius.\r\n        };\r\n        // First, search for places.\r\n        placesService.textSearch(placesRequest, ((response) => {\r\n            console.log(`response is: `);\r\n            console.log(response);\r\n            // Only look at the nearest top 5.\r\n            const responseLimit = Math.min(10, response.length);\r\n            for (let i = 0; i < responseLimit; i++) {\r\n                const placeResponse = response[i];\r\n                const { rating, name } = placeResponse;\r\n                const address = placeResponse.formatted_address; // e.g 80 mandai Lake Rd,\r\n                const priceLevel = placeResponse.price_level; // 1, 2, 3...\r\n                let photoUrl = '';\r\n                let openNow = false;\r\n                if (placeResponse.opening_hours) {\r\n                    openNow = placeResponse.opening_hours.open_now; // e.g true/false\r\n                }\r\n                if (placeResponse.photos && placeResponse.photos.length > 0) {\r\n                    photoUrl = placeResponse.photos[0].getUrl();\r\n                }\r\n\r\n                // Second, For each placeResponse, check if it is within acceptable travelling distance\r\n                const directionRequest = {\r\n                    origin: markerLatLng,\r\n                    destination: address, // Address of place\r\n                    travelMode: 'DRIVING',\r\n                }\r\n                directionService.route(directionRequest, ((result, status) => {\r\n                    if (status !== 'OK') { return }\r\n                    const travellingRoute = result.routes[0].legs[0]; // { duration: { text: 1mins, value: 600 } }\r\n                    const travellingTimeInMinutes = travellingRoute.duration.value / 60;\r\n                    if (travellingTimeInMinutes < timeLimit) {\r\n                        // todo: if timelimit is not given default it to 10min\r\n                        const distanceText = travellingRoute.distance.text; // 6.4km\r\n                        const timeText = travellingRoute.duration.text; // 11 mins\r\n                        filteredResults.push({\r\n                            name,\r\n                            rating,\r\n                            address,\r\n                            openNow,\r\n                            priceLevel,\r\n                            photoUrl,\r\n                            distanceText,\r\n                            timeText,\r\n                        });\r\n                    }\r\n                    // Finally, Add results to state\r\n                    this.setState({ searchResults: filteredResults });\r\n\r\n                }));\r\n            }\r\n        }));\r\n    });\r\n\r\n        render() {\r\n        const {isAuthenticated, user} = this.props.auth;\r\n        const {classes} = this.props;\r\n        const { constraints, mapsLoaded, singaporeLatLng, markers, searchResults, name, isSelectorOpenValue, showCard, currentLocation, placeLocation } = this.state;\r\n        const { autoCompleteService, geoCoderService, SG_COOR, zoom, selectorValue } = this.state; // Google Maps Services\r\n\r\n            return (\r\n                // maxHeight: \"100vh\",height: '100vh'\r\n                <div style={{ width: '100%', maxWidth: \"100%\",     overflow: \"hidden\"}}>\r\n                {mapsLoaded?\r\n                    <Navbar\r\n                    isLoggedIn={isAuthenticated}\r\n                    logOutUser={this.props.logoutUser}\r\n                    onSelectOption={this.handleOption} // function to pass selected option to mapContainer state\r\n                    autoCompleteService={autoCompleteService}\r\n                    geoCoderService={geoCoderService}\r\n                    singaporeLatLng={singaporeLatLng}\r\n                    markerName={name}\r\n                    addMarker={this.addMarker}\r\n                    />\r\n                    : null\r\n                }\r\n\r\n\r\n\r\n\r\n                {/* Maps Section */}\r\n                    {/*<section  className={ classNames( classes.mapStyle, {*/}\r\n                    <section  className={ classNames( classes.mapStyle, {\r\n                        [classes.isSelectorOpenStyle]: isSelectorOpenValue,\r\n                        [classes.showCard]: showCard\r\n                        })}\r\n                    >\r\n                    {/*<div style={{ height: '100vh', width: '100%', maxWidth: \"100%\", maxHeight: \"100vh\" }}>*/}\r\n                    {/*<div >*/}\r\n                        {/*<section >*/}\r\n\r\n\r\n                        <GoogleMapReact\r\n                            className={classes.mapStyle}\r\n                            bootstrapURLKeys={{\r\n                                key: process.env.REACT_APP_GOOGLE_KEY,\r\n                                libraries: ['places', 'directions']\r\n                            }}\r\n                            center={{ lat: placeLocation.lat, lng: placeLocation.lng }}\r\n                            defaultZoom={zoom}\r\n                            // defaultCenter={{ lat: currentLocation.lat, lng: currentLocation.lng }}\r\n                            yesIWantToUseGoogleMapApiInternals={true}\r\n                            onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)} // \"maps\" is the mapApi. Bad naming but that's their library.\r\n                        >\r\n                             {/*Pin markers on the Map*/}\r\n\r\n\r\n                            {markers.map((marker, key) => {\r\n                                const { name, lat, lng } = marker;\r\n                                return (\r\n                                    <MapMarker key={key}\r\n                                               name={name}\r\n                                               handleMarkerClick={this.handleMarkerClick}\r\n                                               lat={lat}\r\n                                               lng={lng}\r\n                                               col={\"rgb(245, 0, 87)\"}/>\r\n\r\n                                );\r\n                            })}\r\n                            {currentLocation.lat !== undefined ? (\r\n                                <MapMarker key={\"khg\"}\r\n                                           handleMarkerClick={this.handleMarkerClick}\r\n                                           lat={currentLocation.lat}\r\n                                           lng={currentLocation.lng}\r\n                                           col={\"rgb(63, 81, 181)\"} />\r\n                            ):null}\r\n                        </GoogleMapReact>\r\n                        </section>\r\n                     {/*</div>*/}\r\n                    {/*</section>*/}\r\n\r\n                {/* Results section */}\r\n                {searchResults.length>0  && showCard ?\r\n                    <>\r\n                        {/*<Divider />*/}\r\n                        <section className={ classes.cardContainer}>\r\n\r\n\r\n                        <section className={\"col-12 ml-5 \"}>\r\n                            <div className=\"d-flex flex-column justify-content-center\">\r\n                                <h1 className=\"mb-4 fw-md\">{selectorValue.replace(\"_\", \" \")}</h1>\r\n                                <div className=\"d-flex flex-wrap\">\r\n                                    {/*<PlaceCard info={result} key={key} />*/}\r\n\r\n                                    {searchResults.map((result, key) => (\r\n                                        <MapCard info={result} key={key}/>\r\n\r\n                                    ))}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </section>\r\n                        </section>\r\n                    </>\r\n                    : null}\r\n\r\n\r\n                    {/*<SwapHorizontalCircleOutlinedIcon/>*/}\r\n                        {showCard ? (\r\n                            <Fab color=\"secondary\"  style={{fontSize: \"1em\", position: \"fixed\", top: \"90%\", marginLeft:\"0.5em\"}}  onClick={this.toggleMap}>\r\n                              <Icon className=\"fas fa-angle-double-left\" onClick={this.toggleMap} />\r\n                            </Fab>\r\n                        ):(\r\n                            <Fab color=\"secondary\"  style={{fontSize: \"1em\", position: \"absolute\", top: \"87%\", marginLeft:\"0.5em\" }}  onClick={this.toggleMap} >\r\n                                <Icon className=\"fas fa-angle-double-right\" onClick={this.toggleMap} />\r\n                            </Fab>\r\n                        )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nMapContainer.propTypes ={\r\n    auth: PropTypes.object.isRequired,\r\n    logoutUser: PropTypes.func.isRequired,\r\n    updateHistory: PropTypes.func.isRequired\r\n\r\n};\r\n\r\n// if we want to get the auth state to our component we use\r\nconst mapStateToProps = (state) =>({\r\n    auth: state.auth,  //the name auth in state.auth comes from our root reducer(index)\r\n});\r\nexport default   connect(mapStateToProps, { logoutUser, updateHistory})(withStyles(styles, {withTheme: true})(MapContainer));\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport {deepOrange, green, pink} from \"@material-ui/core/colors\";\r\nimport bg from './bg.svg'\r\nimport React from \"react\";\r\nconst styles =  theme =>  ({\r\n    container:{\r\n        height: \"100vh\",\r\n        color: \"white\",\r\n        background: `url(${bg}) no-repeat center center fixed`,\r\n        WebkitBackgroundSize: \"cover\",\r\n        MozBackgroundSize: \"cover\",\r\n        OBackgroundSize: \"cover\",\r\n        backgroundSize: \"cover !important\"\r\n    },\r\n    mapStyle:{\r\n        marginTop: \"1.5em\",\r\n        height: \"90%\",\r\n        width: \"60%\",\r\n        padding: \"0\",\r\n        position: \"absolute\",\r\n    },\r\n    historyStyle:{\r\n        // \"&::WebkitScrollbar\": {\r\n        //     width: \"10px !important\",\r\n        //     backgroundColor: \"#F5F5F5 !important\"\r\n        // },\r\n        // \"&::WebkitScrollbarTrack\": {\r\n        //     border: \"1px solid black !important\",\r\n        //     backgroundColor: \"#F5F5F5 !important\"\r\n        // },\r\n        // \"&::WebkitScrollbarThumb\": {\r\n        //     backgroundColor: \"#000000 !important\"\r\n        // },\r\n        marginTop: \"3em\",\r\n        height: \"100vh\",\r\n        width: \"38%\",\r\n\r\n\r\n    },\r\n    hist:{\r\n        fontSize: \"1.5em\",\r\n        textAlign: \"center\",\r\n        marginTop: \"0.5em\",\r\n        marginBottom: \"0.5em\",\r\n        padding: \"0.2em\",\r\n        \"&:hover\":{\r\n            color: \"gray\",\r\n            borderRadius:\"10%\",\r\n            background: \"rgba(16, 16, 16, 0.5)\"\r\n        }\r\n    },\r\n    selected:{\r\n        color: \"gray\"\r\n    },\r\n    yourHistory:{\r\n        fontSize: \"3em\",\r\n        textAlign: \"center\",\r\n        color: \"gray\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    scrollbar: {\r\n\r\n    },\r\n\r\n    forceOverflow:{\r\n    minHeight: \"450px\"\r\n    },\r\nstyleone: {\r\n\r\n}\r\n\r\n\r\n\r\n});\r\n\r\nexport default styles;\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport styles from \"../styles/HistoryStyles\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {getUserHistory, updateHistory} from \"../actions/historyActions\";\r\nimport {message} from \"antd\";\r\nimport Moment from 'moment';\r\nimport clsx from 'clsx';\r\n\r\n\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport isEmpty from \"../validation/is-empty\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport classNames from \"classnames\";\r\nimport MapMarker from \"./MapMarker\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport MenuItem from \"./layout/Navbar\";\r\n\r\nclass History extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            errors: {},\r\n            hist: [],\r\n            zoom: 18,\r\n            currentLocation:{\r\n                lat: 21.0278,\r\n                lng: 105.8342,\r\n                arrival_at: null,\r\n                leave_at: null\r\n            },\r\n            histSelected: null\r\n        };\r\n        // this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    componentDidMount() {  // if user is already logged in redirect\r\n        const user_id = this.props.auth.user.result.id;\r\n        this.props.getUserHistory(user_id);\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {      // take the new errors from nextProps if any and set that to errors in the state\r\n        if(nextProps.errors  && nextProps.auth.isAuthenticated){\r\n            this.setState({errors: nextProps.errors}, ()=>{\r\n                this.setState({loading:false});\r\n                if(this.state.errors.message !== undefined)\r\n                    message.error(this.state.errors.message);\r\n            });\r\n        }\r\n        if(nextProps.hist){\r\n            this.setState({hist: nextProps.hist});\r\n        }\r\n\r\n        // console.log(nextProps.hist.hist.data[0]);\r\n        // if(this.props.profile){\r\n        //     this.setState({\r\n        //         firstName: nextProps.profile.profile.firstName,\r\n        //         lastName: nextProps.profile.profile.lastName,\r\n        //\r\n        //     })\r\n        // }\r\n    }\r\n    handleClick(hist, index){\r\n        let pos = {\r\n            lat: hist.latitude,\r\n            lng: hist.longitude,\r\n            arrival_at: Moment(hist.arrival_at).format('YYYY-MM-DD HH:mm:ss'),\r\n            // leave_at: Moment(hist.leave_at).format('YYYY-MM-DD HH:mm:ss'),\r\n        };\r\n        this.setState({currentLocation: pos, histSelected: index })\r\n    }\r\n\r\n    // handleSubmit(evt){\r\n    //     evt.preventDefault();\r\n    //\r\n    //     let newHist = [\r\n    //         {\r\n    //             latitude: \"123.23\",\r\n    //             longitude: \"623.32\",\r\n    //             arrival_at: \"2019-12-17 00:04:50\",\r\n    //             leave_at: \"2019-12-17 00:08:50\"\r\n    //         }\r\n    //     ];\r\n    //     const user_id = this.props.auth.user.result.id;\r\n    //\r\n    //     this.props.updateHistory(newHist,user_id,this.props.history);\r\n    //\r\n    //     console.log(`Handle submit`);\r\n    // }\r\n\r\n    render() {\r\n        const {hist, currentLocation, zoom, histSelected} = this.state;\r\n        const {classes} = this.props;\r\n        let history=null;\r\n        if(!isEmpty(hist.hist)) {\r\n            history = hist.hist.map((hist, index) => (\r\n                <div key={index} onClick={() => this.handleClick(hist, index)} className={classNames(classes.hist, {\r\n                    [classes.selected]: index === histSelected\r\n                })}>\r\n                    Latitude: {hist.latitude}° Longitude: {hist.longitude}°\r\n                </div>\r\n            ));\r\n        }else{\r\n            history = <div className={ classes.hist}>\r\n                Looks like there is nothing here!\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div style={{ width: '100%', maxWidth: \"100%\", overflow: \"hidden\"}} className={classes.container}>\r\n                <section className={ classes.historyStyle} style={{display: \"inline-block\", overflow: \"scroll\"}}>\r\n                    <p  className={classes.yourHistory}>Your History</p>\r\n                    {history}\r\n                    {/*<button onClick={this.handleSubmit} >Add history</button>*/}\r\n                </section>\r\n\r\n                <section  className={ classes.mapStyle} style={{display: \"inline-block\"}}>\r\n                    {currentLocation.arrival_at !== null && currentLocation.arrival_at !== undefined && currentLocation.arrival_at !== \"Invalid date\" ? (\r\n                        <div style={{marginBottom: \"0.2em\", color: \"white\", textAlign: \"center\", fontSize: \"1.5em\"}}>You arrived at {currentLocation.arrival_at}</div>\r\n                        ) : null}\r\n                <GoogleMapReact\r\n                    className={classes.mapStyle}\r\n                    bootstrapURLKeys={{\r\n                        key: process.env.REACT_APP_GOOGLE_KEY,\r\n                        libraries: ['places', 'directions']\r\n                    }}\r\n                    center={{ lat: currentLocation.lat, lng: currentLocation.lng }}\r\n                    defaultZoom={zoom}\r\n                    // defaultCenter={{ lat: currentLocation.lat, lng: currentLocation.lng }}\r\n                    yesIWantToUseGoogleMapApiInternals={true} // \"maps\" is the mapApi. Bad naming but that's their library.\r\n                >\r\n                            <MapMarker\r\n                                       lat={currentLocation.lat}\r\n                                       lng={currentLocation.lng}\r\n                                       col={\"rgb(245, 0, 87)\"}/>\r\n\r\n                </GoogleMapReact>\r\n            </section>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nHistory.propTypes ={\r\n    auth: PropTypes.object.isRequired,\r\n\r\n    errors: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    // hist: PropTypes.array.isRequired,\r\n    getUserHistory: PropTypes.func.isRequired,\r\n    updateHistory: PropTypes.func.isRequired,\r\n    // updateProfile: PropTypes.func.isRequired\r\n\r\n\r\n};\r\n\r\n// if we want to get the auth state to our component we use\r\nconst mapStateToProps = (state) =>({\r\n    auth: state.auth,  //the name auth in state.auth comes from our root reducer(index)\r\n    errors: state.errors,\r\n    profile: state.profile,\r\n    hist: state.hist\r\n});\r\n\r\nexport default connect(mapStateToProps, {getUserHistory, updateHistory})(withStyles(styles, {withTheme: true})(withRouter(History)));\r\n","import axios from 'axios';\r\n\r\nimport {GET_PROFILE, PROFILE_LOADING, GET_ERRORS, CLEAR_CURRENT_PROFILE, CLEAR_ERRORS} from \"./types\";\r\nimport {message} from 'antd';\r\n\r\n// Get current profile\r\nexport const getCurrentProfile = (id) =>async dispatch => {\r\n    // dispatch(setProfileLoading());  // set loading to true\r\n\r\n    const url = `http://34.87.80.154:443/api/users/${id}`;\r\n    console.log(`id is ${id}`);\r\n    console.log(url);\r\n    console.log(`Token from profile actions is:`);\r\n    console.log();\r\n    axios.defaults.headers.common['Authorization'] = \"Bearer \"+axios.defaults.headers.common['Authorization'];\r\n   await axios.get(url)\r\n        .then(res =>{\r\n            console.log(`res is:`);\r\n            console.log(res);\r\n            console.log(res.data.data);\r\n            dispatch({\r\n                type: GET_PROFILE,\r\n                payload: res.data.data\r\n            });\r\n            dispatch(clearErrors());\r\n\r\n            message.success(\"Got current profile\")\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_PROFILE,\r\n                payload: {}\r\n            });\r\n            // dispatch({\r\n            //     type: GET_ERRORS,  //this call test dispatch. to dispsatch to our reducer\r\n            //     // payload: {}//sets payload to errors coming from server\r\n            //     payload: err.response.data //sets payload to errors coming from server\r\n            // });\r\n        });\r\n    axios.defaults.headers.common['Authorization'] =  axios.defaults.headers.common['Authorization'].slice(7);\r\n};\r\n// update profile\r\nexport const updateProfile = (profileData, id, history) =>  async dispatch => {\r\n    // dispatch(clearErrors());\r\n\r\n    // dispatch(setProfileLoading());  // set loading to true\r\n    const url = \"http://34.87.80.154:443\";\r\n    axios.defaults.headers.common['Authorization'] = \"Bearer \"+axios.defaults.headers.common['Authorization'];\r\n    console.log(axios.defaults.headers.common['Authorization']);\r\n\r\n    await axios.put(`${url}/api/users/${id}`, profileData)\r\n        .then(res => {\r\n            console.log(`res is:`);\r\n            console.log(res);\r\n            getCurrentProfile(id);\r\n            history.push('/');\r\n            dispatch(clearErrors());\r\n\r\n            message.success(\"Profile Updated Successfully\")\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            dispatch({\r\n                type: GET_PROFILE,\r\n                payload: {}\r\n            });\r\n            // dispatch({\r\n            //     type: GET_ERRORS,  //this call test dispatch. to dispsatch to our reducer\r\n            //     // payload: {}//sets payload to errors coming from server\r\n            //     payload: err.response.data //sets payload to errors coming from server\r\n            // });\r\n        });\r\n    axios.defaults.headers.common['Authorization'] =  axios.defaults.headers.common['Authorization'].slice(7);\r\n\r\n};\r\n\r\n\r\n// Profile loading\r\n// export const setProfileLoading = () =>{\r\n//   return{\r\n//       type: PROFILE_LOADING\r\n//   }\r\n// };\r\n\r\n// Clear Profile\r\n// export const clearCurrentProfile = () =>{\r\n//   return{\r\n//       type: CLEAR_CURRENT_PROFILE\r\n//   }\r\n// };\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};\r\n","import React, {Component} from 'react';\r\nimport * as PropTypes from \"prop-types\";  // to map prop to prop-types\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux' // to use redux in a component\r\nimport { registerUser, loginUser } from \"../actions/authActions\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Moment from 'moment';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport styles from '../styles/LoginStyles'\r\nimport {TextValidator, ValidatorForm} from \"react-material-ui-form-validator\";\r\nimport {message} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {getCurrentProfile, updateProfile} from \"../actions/profileActions\";\r\nimport Fab from \"./History\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\n\r\n\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName:\"\",\r\n            birthday: \"\",\r\n            city:\"\",\r\n            country: \"\",\r\n            nationality: \"\",\r\n            email:\"\",\r\n            phone:\"\",\r\n            errors:{},\r\n            loading: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    componentDidMount() {  // if user is already logged in redirect\r\n        const user_id = this.props.auth.user.result.id;\r\n        this.props.getCurrentProfile(user_id);\r\n\r\n        console.log(`state is:`);\r\n        console.log(this.state);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {      // take the new errors from nextProps if any and set that to errors in the state\r\n        if(nextProps.errors  && nextProps.auth.isAuthenticated){\r\n            this.setState({errors: nextProps.errors}, ()=>{\r\n                this.setState({loading:false});\r\n                if(this.state.errors.message !== undefined)\r\n                    message.error(this.state.errors.message);\r\n            });\r\n        }\r\n        console.log(`Profile is:`);\r\n        console.log(nextProps.profile);\r\n        let birthday = Moment(nextProps.profile.profile.birthday).format('YYYY-MM-DD');\r\n        if(birthday === \"Invalid date\") birthday = null;\r\n        if(this.props.profile){\r\n            this.setState({\r\n                firstName: nextProps.profile.profile.firstName,\r\n                lastName: nextProps.profile.profile.lastName,\r\n                birthday:  birthday,\r\n                city: nextProps.profile.profile.city,\r\n                country: nextProps.profile.profile.country,\r\n                nationality: nextProps.profile.profile.nationality,\r\n                email: nextProps.profile.profile.email,\r\n                phone: nextProps.profile.profile.phone\r\n            })\r\n        }\r\n    }\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n        console.log(`Handling submit`);\r\n        const new_profile ={\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            birthday: this.state.birthday,\r\n            city: this.state.city,\r\n            country: this.state.country,\r\n            nationality: this.state.nationality,\r\n            email: this.state.email,\r\n            phone: this.state.phone\r\n        };\r\n        console.log(new_profile);\r\n        const user_id = this.props.auth.user.result.id;\r\n        console.log(user_id);\r\n        this.setState({loading: true});\r\n        this.props.updateProfile(new_profile, user_id, this.props.history);   //so we can redirect from action\r\n        // we dont have to do http://5000 cus of the proxy value we included in our package.json\r\n\r\n\r\n        console.log(`Handle submit`);\r\n    }\r\n    render() {\r\n        const {classes} = this.props;\r\n        const {firstName, lastName, birthday, city, country, nationality, phone, email, loading} = this.state;\r\n        return (\r\n            <section className={classes.container} style={{height: \"135vh\"}}>\r\n\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Your Profile\r\n                    </Typography>\r\n\r\n                    <ValidatorForm onSubmit={this.handleSubmit} ref={'form'} className={classes.form}>\r\n\r\n                        <TextValidator\r\n                            label={\"First Name\"}\r\n                            value={firstName}\r\n                            name={\"firstName\"}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            placeholder={\"First Name\"}\r\n                            variant={\"outlined\"}\r\n                            type={'text'}\r\n                            margin={\"normal\"}\r\n                            autoFocus\r\n                        />\r\n                        <TextValidator\r\n                            label={\"Last Name\"}\r\n                            value={lastName}\r\n                            name={\"lastName\"}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            placeholder={\"Last Name\"}\r\n                            variant={\"outlined\"}\r\n                            type={'text'}\r\n                            margin={\"normal\"}\r\n                            autoFocus\r\n                        />\r\n\r\n                        <TextValidator\r\n                            label={\"Birthday\"}\r\n                            value={birthday}\r\n                            name={\"birthday\"}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            // placeholder={\"Birthday\"}\r\n                            variant={\"outlined\"}\r\n                            type={'date'}\r\n                            margin={\"normal\"}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            autoFocus\r\n                        />\r\n                        <TextValidator\r\n                            label={\"City\"}\r\n                            value={city}\r\n                            name={\"city\"}\r\n                            className={classes.halfWidth_x}\r\n                            onChange={this.handleChange}\r\n                            placeholder={\"City\"}\r\n                            variant={\"outlined\"}\r\n                            type={'text'}\r\n                            margin={\"normal\"}\r\n                            autoFocus\r\n                        />\r\n                        <TextValidator\r\n                            className={classes.halfWidth_x2}\r\n                            label={\"Country\"}\r\n                            value={country}\r\n                            name={\"country\"}\r\n                            onChange={this.handleChange}\r\n                            placeholder={\"Country\"}\r\n                            variant={\"outlined\"}\r\n                            type={'text'}\r\n                            margin={\"normal\"}\r\n                            autoFocus\r\n                        />\r\n                        <TextValidator\r\n                            label={\"Nationality\"}\r\n                            value={nationality}\r\n                            name={\"nationality\"}\r\n                            fullWidth\r\n                            onChange={this.handleChange}\r\n                            placeholder={\"Nationality\"}\r\n                            variant={\"outlined\"}\r\n                            type={'text'}\r\n                            margin={\"normal\"}\r\n                            autoFocus\r\n                        />\r\n                        <TextValidator\r\n                        value={email}\r\n                        placeholder={\"Email Address\"}\r\n                        name={\"email\"}\r\n                        variant={\"outlined\"}\r\n                        margin={\"normal\"}\r\n                        onChange={this.handleChange}\r\n                        label={\"Email\"}\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        fullWidth\r\n                        validators={[\"isEmail\"]}\r\n                        errorMessages={[\"Must be an Email\"]}\r\n                        />\r\n                        <TextValidator\r\n                            label={\"Phone\"}\r\n                            value={phone}\r\n                            name={\"phone\"}\r\n                            fullWidth\r\n                            onChange={this.handleChange}\r\n                            placeholder={\"Phone Number\"}\r\n                            variant={\"outlined\"}\r\n                            type={'Number'}\r\n                            margin={\"normal\"}\r\n                            autoFocus\r\n                        />\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            className={classes.submit}\r\n                        >\r\n                            Update Profile\r\n                        </Button>\r\n\r\n                    </ValidatorForm>\r\n                </div>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    {'Copyright © '}\r\n                    <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                        Tourist Trace Tracking\r\n                    </Link>{' '}\r\n                    {new Date().getFullYear()}\r\n                    {'.'}\r\n                </Typography>\r\n            </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nProfile.propTypes ={\r\n    auth: PropTypes.object.isRequired,\r\n\r\n    errors: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    // updateProfile: PropTypes.func.isRequired\r\n\r\n\r\n};\r\n\r\n// if we want to get the auth state to our component we use\r\nconst mapStateToProps = (state) =>({\r\n    auth: state.auth,  //the name auth in state.auth comes from our root reducer(index)\r\n    errors: state.errors,\r\n    profile: state.profile\r\n});\r\n\r\n//\r\nexport default connect(mapStateToProps, {getCurrentProfile, updateProfile})(withStyles(styles, {withTheme: true})(withRouter(Profile)))\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport * as PropTypes from \"prop-types\";  // to map prop to prop-types\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux' // to use redux in a component\r\nimport { registerUser, loginUser } from \"../../actions/authActions\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport styles from '../..//styles/LoginStyles'\r\nimport {TextValidator, ValidatorForm} from \"react-material-ui-form-validator\";\r\nimport {message} from \"antd\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // email: \"\",\r\n            username:\"\",\r\n            password: \"\",\r\n            repeatPassword:\"\",\r\n            errors:{},\r\n            loading: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    componentDidMount() {  // if user is already logged in redirect\r\n        if(this.props.auth.isAuthenticated){\r\n            this.props.history.push('/');\r\n            message.success(\"You can't signUp when logged in. Redirecting..\")\r\n\r\n        }\r\n        ValidatorForm.addValidationRule('isPasswordMatch',(value)=> {\r\n            if (value !== this.state.password) {\r\n                return false;\r\n            }\r\n            return true;\r\n\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {      // take the new errors from nextProps if any and set that to errors in the state\r\n        if(nextProps.errors  && !nextProps.auth.isAuthenticated){\r\n            this.setState({errors: nextProps.errors}, ()=>{\r\n                this.setState({loading:false});\r\n                if(this.state.errors.message !== undefined)\r\n                    message.error(this.state.errors.message);\r\n            });\r\n        }else{\r\n            const newUser = {\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            };\r\n            setTimeout(()=>this.props.loginUser(newUser, this.props.history), 500);\r\n        }\r\n    }\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n        console.log(`Handling submit`);\r\n\r\n        const newUser = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n        this.setState({loading: true});\r\n        this.props.registerUser(newUser, this.props.history);   //so we can redirect from action\r\n        // we dont have to do http://5000 cus of the proxy value we included in our package.json\r\n\r\n\r\n        console.log(`Handle submit`);\r\n    }\r\n    render() {\r\n        const {classes} = this.props;\r\n        const {email, username, password, repeatPassword, loading} = this.state;\r\n        return (\r\n            <section className={classes.container}>\r\n\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign Up\r\n                    </Typography>\r\n\r\n                    <ValidatorForm onSubmit={this.handleSubmit} ref={'form'} className={classes.form}>\r\n                        {/*<TextValidator*/}\r\n                            {/*className={classes.form}*/}\r\n                            {/*value={email}*/}\r\n                            {/*placeholder={\"Email Address\"}*/}\r\n                            {/*name={\"email\"}*/}\r\n                            {/*variant={\"outlined\"}*/}\r\n                            {/*margin={\"normal\"}*/}\r\n                            {/*onChange={this.handleChange}*/}\r\n                            {/*id=\"email\"*/}\r\n                            {/*label={\"Email*\"}*/}\r\n                            {/*autoComplete=\"email\"*/}\r\n                            {/*autoFocus*/}\r\n                            {/*//the order of validators and error messages matter*/}\r\n                            {/*validators={[\"required\",\"isEmail\"]}*/}\r\n                            {/*errorMessages={[*/}\r\n                                {/*\"Enter an email\",*/}\r\n                                {/*\"Must be an Email\"]}*/}\r\n                        {/*/>*/}\r\n                        <TextValidator\r\n                            label={\"Username*\"}\r\n                            value={username}\r\n                            name={\"username\"}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            placeholder={\"Username\"}\r\n                            variant={\"outlined\"}\r\n                            type={'text'}\r\n                            margin={\"normal\"}\r\n                            validators={[\"required\"]}\r\n                            errorMessages={[\"Enter a username\"]}\r\n                        />\r\n                        <TextValidator\r\n                            className={classes.form}\r\n                            value={password}\r\n                            placeholder={\"Password\"}\r\n                            name={\"password\"}\r\n                            variant={\"outlined\"}\r\n                            margin={\"normal\"}\r\n                            onChange={this.handleChange}\r\n                            id=\"password\"\r\n                            label={\"Password*\"}\r\n                            autoComplete=\"password\"\r\n                            autoFocus\r\n                            validators={[\"required\"]}\r\n                            type={'password'}\r\n                            errorMessages={[\r\n                                \"Please enter a password\"]}\r\n                        />\r\n                        <TextValidator\r\n                            className={classes.form}\r\n                            value={repeatPassword}\r\n                            placeholder={\"Confirm Password\"}\r\n                            name={\"repeatPassword\"}\r\n                            variant={\"outlined\"}\r\n                            margin={\"normal\"}\r\n                            onChange={this.handleChange}\r\n                            id=\"repeatPassword\"\r\n                            label={\"Confirm Password*\"}\r\n                            autoComplete=\"password\"\r\n                            type={'password'}\r\n                            autoFocus\r\n                            validators={[\"required\", \"isPasswordMatch\"]}\r\n                            errorMessages={[\r\n                                \"Please enter a password\",\r\n                                \"Password doesn't match\"]}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link href=\"/login\" variant=\"body2\">\r\n                                    {\"Have an account? LogIn\"}\r\n                                </Link>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </ValidatorForm>\r\n                </div>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                        {'Copyright © '}\r\n                        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                            Tourist Trace Tracking\r\n                        </Link>{' '}\r\n                        {new Date().getFullYear()}\r\n                        {'.'}\r\n                </Typography>\r\n            </Container>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes ={\r\n    loginUser: PropTypes.func.isRequired,\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\n// if we want to get the auth state to our component we use\r\nconst mapStateToProps = (state) =>({\r\n    auth: state.auth,  //the name auth in state.auth comes from our root reducer(index)\r\n    errors: state.errors\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { registerUser, loginUser })(withStyles(styles, {withTheme: true})(withRouter(Register)))\r\n\r\n\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as PropTypes from \"prop-types\";     // to map prop to prop-types\r\nimport {message } from 'antd';\r\n\r\n\r\nconst PrivateRoute = ({component: Component, auth, ...rest}) => (\r\n    // if user is authenticated render that route else redirect to '/login\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.isAuthenticated === true ?\r\n                (\r\n                    <Component {...props}/>\r\n                ):(\r\n                    <Redirect to={'/login'}/>\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes ={\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) =>({\r\n    auth: state.auth  //the name auth in state.auth comes from our root reducer(index)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, {Component} from 'react';\r\nimport * as PropTypes from \"prop-types\";     // to map prop to prop-types\r\n\r\nimport { connect } from 'react-redux' // to use redux in a component\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport styles from '../styles/LoginStyles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport {message } from 'antd';\r\nimport {loginAdmin} from \"../actions/authActions\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username:\"\",\r\n            name: \"\",\r\n            password: \"\",\r\n            loggedIn: false,\r\n            loading: false,\r\n            errors: {}\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    componentDidMount() {  // if user is already logged in redirect\r\n        if(this.props.auth.isAuthenticated){\r\n            this.props.history.push('/');\r\n            message.success(\"User already logged in. Redirecting...\")\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {      // take the new errors from nextProps if any and set that to errors in the state\r\n        if(nextProps.auth.isAuthenticated){\r\n\r\n            this.props.history.push('/');\r\n        }\r\n        if(nextProps.errors && !nextProps.auth.isAuthenticated){\r\n            this.setState({errors: nextProps.errors}, ()=>{\r\n                this.setState({loading:false});\r\n                if(this.state.errors.message !== undefined)\r\n                    message.error(this.state.errors.message);\r\n            });\r\n\r\n        }\r\n    }\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n        const userData = {\r\n            username: this.state.username,\r\n            name: this.state.name,\r\n            password: this.state.password\r\n        };\r\n        console.log(`${this.state.username}${this.state.password}`);\r\n        this.setState({loading: true});\r\n        this.props.loginAdmin(userData, this.props.history);\r\n        this.setState({loggedIn: true, loading: false});\r\n        // message.success(\"Succesfully logged in user\");\r\n\r\n        console.log(`Handle submit`);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const {username, name, password, loading, loggedIn} = this.state;\r\n        // {loggedIn ? }\r\n        {/*<div>You are now logged In</div> : */}\r\n        const form =  (<section className={classes.container}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Login\r\n                    </Typography>\r\n                    <ValidatorForm onSubmit={this.handleSubmit} ref={'form'} className={classes.form}>\r\n                        <TextValidator\r\n                            label={\"Username*\"}\r\n                            value={username}\r\n                            name={\"username\"}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            placeholder={\"Username\"}\r\n                            variant={\"outlined\"}\r\n                            type={'text'}\r\n                            margin={\"normal\"}\r\n                            validators={[\"required\"]}\r\n                            errorMessages={[\"Enter a username\"]}\r\n                        />\r\n                        <TextValidator\r\n                            label={\"Name*\"}\r\n                            value={name}\r\n                            name={\"name\"}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            placeholder={\"Name\"}\r\n                            variant={\"outlined\"}\r\n                            type={'text'}\r\n                            margin={\"normal\"}\r\n                            validators={[\"required\"]}\r\n                            errorMessages={[\"Enter a name\"]}\r\n                        />\r\n                        <TextValidator\r\n                            className={classes.form}\r\n                            value={password}\r\n                            placeholder={\"Password\"}\r\n                            name={\"password\"}\r\n                            variant={\"outlined\"}\r\n                            margin={\"normal\"}\r\n                            onChange={this.handleChange}\r\n                            type={'password'}\r\n                            fullwidth\r\n                            id=\"password\"\r\n                            label={\"Password*\"}\r\n                            autoComplete=\"password\"\r\n                            autoFocus\r\n                            validators={[\"required\"]}\r\n                            errorMessages={[\r\n                                \"Please enter a password\"]}\r\n                        />\r\n\r\n\r\n                        <br/>\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            disabled={loading}\r\n                        >\r\n                            LogIn\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link href=\"/register\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ValidatorForm>\r\n                </div>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                    {'Copyright © '}\r\n                    <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                        Tourist Trace Tracking\r\n                    </Link>{' '}\r\n                    {new Date().getFullYear()}\r\n                    {'.'}\r\n                </Typography>\r\n            </Container>\r\n        </section>);\r\n        const users =(\r\n            <section style={{ width: '100%', maxWidth: \"100%\", overflow: \"hidden\"}} className={classes.container}>\r\n                <p>Admin Page</p>\r\n                    <section style={{ width: '30%'}}>\r\n                        <p>View all Users</p>\r\n                        <p>Delete a User</p>\r\n                        <p>Update a User History</p>\r\n                        <p>Delete a User History</p>\r\n                        <p>Update a User Profile</p>\r\n                    </section>\r\n                    <section style={{ width: '70%'}}>\r\n                        <p>Stuff Here</p>\r\n                    </section>\r\n            </section>\r\n        );\r\n\r\n            return (\r\n            <>\r\n             { loggedIn? users:  form}\r\n            </>\r\n            // )}\r\n        );\r\n    }\r\n}\r\n\r\nAdmin.propTypes ={\r\n    loginAdmin: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\n// if we want to get the auth state to our component we use\r\nconst mapStateToProps = (state) =>({\r\n    auth: state.auth,  //the name auth in state.auth comes from our root reducer(index)\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginAdmin })(withStyles(styles, {withTheme: true})(Admin));\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport {BrowserRouter,Route, Switch} from \"react-router-dom\";\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken'\nimport {setCurrentUser} from \"./actions/authActions\";\nimport {logoutUser} from \"./actions/authActions\";\n// import {clearCurrentProfile} from \"./actions/profileActions\";\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './styles/App.css';\n\nimport MapContainer from \"./components/MapContainer\";\nimport History from './components/History';\nimport Profile from './components/Profile';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/antd/dist/antd.css';\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport Admin from \"./components/Admin\";\n\n// Check for token\nif(localStorage.jwtToken){\n    // Set auth token header auth\n    setAuthToken(localStorage.jwtToken);\n    // Decode token and get user info and expiration\n    const decoded = jwt_decode(localStorage.jwtToken);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded));\n\n    // Check for expired token\n    const currentTime = Date.now() / 1000;\n    if(decoded.exp < currentTime){\n        // Logout user\n        store.dispatch(logoutUser());\n        //TODO: Clear current Profile\n        // store.dispatch(clearCurrentProfile());\n        // Redirect to login\n        window.location.href = '/login'\n    }\n}\n\nfunction App() {\n  return (\n      <Provider store={ store }>\n          <BrowserRouter>\n            <div className=\"App\">\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={routeProps => (\n                            <MapContainer {...routeProps}/>\n                        )}\n                    />\n                    <Route\n                        exact\n                        path=\"/login\"\n                        render={routeProps =>(\n                            <Login {...routeProps}/>\n                        )}\n                    />\n                    <Route\n                        exact\n                        path=\"/admin\"\n                        render={routeProps =>(\n                            <Admin {...routeProps}/>\n                        )}\n                    />\n                    <Route\n                        exact\n                        path={\"/register\"}\n                        render={routeProps =>(\n                            <Register {...routeProps}/>\n                        )}\n                    />\n                    <PrivateRoute\n                        exact\n                        path={\"/history/:id\"}\n                        component={History}\n                    />\n                    <PrivateRoute\n                        exact\n                        path={'/profile'}\n                        component={Profile}\n                    />\n                </Switch>\n            </div>\n          </BrowserRouter>\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n        <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}